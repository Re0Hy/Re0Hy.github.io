<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021红帽杯_ezRev</title>
      <link href="/2021/10/19/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF_ezRev/"/>
      <url>/2021/10/19/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF_ezRev/</url>
      
        <content type="html"><![CDATA[<h1 id="0x1"><a href="#0x1" class="headerlink" title="0x1"></a>0x1</h1><p>其实就是一个简单的xtea，并没有做任何修改，但是前面的各种阻碍</p><p>比较难受。</p><h1 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h1><p>开始是最大的一个坑点，长度限制只有一个，就是不能等于16，需要修改一下跳转</p><blockquote><p>但是等到后面调试的时候，才知道知道这里需要进行修改</p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019002435203.png" alt="image-20211019002435203"></p><p>接下来会随机生成两个数，并只取十进制状态下的最后一位，然后rand2需要比rand1的值小，才能继续运行程序</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019002812168.png" alt="image-20211019002812168"></p><p>满足条件后，会经过一个函数，动调可以发现返回的值就是对应次方后的最后一位值，后面进行对比，可以修改跳转通过这里，或者将值获取出来</p><blockquote><p>值:rand1=4,rand2=2</p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019002854731.png" alt="image-20211019002854731"></p><p>接下来会跳转到Sleep，一直暂停，这里需要将它nop掉</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019003400599.png" alt="image-20211019003400599"></p><blockquote><p>这里是nop后</p></blockquote><pre class="line-numbers language-python"><code class="language-python">addr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x7FF6DF3D30F6</span><span class="token punctuation">,</span><span class="token number">0x7FF6DF3D3101</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>addr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ida_bytes<span class="token punctuation">.</span>patch_byte<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0x90</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后通过查看内存的方式，获取xtea的key的四个值</p><pre class="line-numbers language-python"><code class="language-python"><span class="token number">0x67932</span><span class="token punctuation">,</span><span class="token number">0x4F765</span><span class="token punctuation">,</span><span class="token number">0x7FAFF</span><span class="token punctuation">,</span><span class="token number">0x67932</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后搓脚本</p><pre class="line-numbers language-C"><code class="language-C">#include<stdio.h>int xtea(unsigned int x,unsigned int y,unsigned int key[],int round){    int i;    unsigned int v0=x,v1=y;    int delta=0x9E3779B9;    int sum=delta*round;    for(i=0;i<round;i++)    {        v1-=(((v0<<4)^(v0>>5))+v0)^(sum+key[(sum>>11)&3]);        sum-=delta;        v0-=(((v1<<4)^(v1>>5))+v1)^(sum+key[sum&3]);    }    x=v0;y=v1;    printf("%c%c",x,y);}int main(){    unsigned int arr[]={0x0D118C7B2,0x7FC3F3A8,0x4A19F2DA,0x472469E1,0x7C682864,0x50C0E3D1,0x0C595670B,     0x2EE07578,0x0D040A3F0,0x0C5590286,0x0D82B07A8,0x0D5978C2C,0x4E2BC556,0x79E2E90,     0x0C7A353B5,0x493995B};    unsigned int key[]={0x67932,0x4F765,0x7FAFF,0x67932};    for(int i=0;i<16;i+=2)    {        xtea(arr[i],arr[i+1],key,32);        key[0]+=789;key[3]+=135;    } } //answer:dDc75e1fE98cBCe8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>带入程序得最终flag</p><blockquote><p>需要修改长度判断</p></blockquote><pre class="line-numbers language-c"><code class="language-c">flag<span class="token punctuation">{</span>42dDc75e1fE98cBCe842<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 加密算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> 红帽杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯_LongTimeAgo</title>
      <link href="/2021/10/15/%E5%BC%BA%E7%BD%91%E6%9D%AF_LongTimeAgo/"/>
      <url>/2021/10/15/%E5%BC%BA%E7%BD%91%E6%9D%AF_LongTimeAgo/</url>
      
        <content type="html"><![CDATA[<p>64位无壳，ida，会发现有花指令，手动去除就行了</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019005841442.png" alt="image-20211019005841442"></p><p>去掉后的主函数内容:</p><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v3<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rdx</span>  <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ecx</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// eax</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v7<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// r15</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v8<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rdi</span>  <span class="token keyword">int</span> <span class="token operator">*</span>v9<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// r12</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v10<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// r14</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v11<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rbx</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v12<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// r13</span>  <span class="token keyword">int</span> v13<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// eax</span>  __int64 v14<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rax</span>  <span class="token keyword">int</span> v15<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// edx</span>  <span class="token keyword">int</span> v16<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// eax</span>  __int64 v17<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rax</span>  <span class="token keyword">int</span> v18<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// edx</span>  <span class="token keyword">int</span> v19<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ecx</span>  <span class="token keyword">int</span> v20<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// eax</span>  __int64 v21<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rax</span>  <span class="token keyword">char</span> v22<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// dl</span>  <span class="token keyword">char</span> v23<span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+30h] [rbp-3F8h] BYREF</span>  <span class="token keyword">char</span> v24<span class="token punctuation">[</span><span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+80h] [rbp-3A8h] BYREF</span>  __int64 v25<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+C8h] [rbp-360h] BYREF</span>  __int64 v26<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+110h] [rbp-318h] BYREF</span>  __int64 v27<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+158h] [rbp-2D0h] BYREF</span>  <span class="token keyword">char</span> v28<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+1A0h] [rbp-288h] BYREF</span>  <span class="token keyword">int</span> v29<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+1C4h] [rbp-264h] BYREF</span>  __int64 v30<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+1E8h] [rbp-240h] BYREF</span>  <span class="token keyword">int</span> v31<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+20Ch] [rbp-21Ch] BYREF</span>  <span class="token keyword">char</span> v32<span class="token punctuation">[</span><span class="token number">360</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [rsp+2C0h] [rbp-168h] BYREF</span>  <span class="token function">sub_40CC40</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> envp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span>v23<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>v23<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf_0</span><span class="token punctuation">(</span>byte_4A68E0<span class="token punctuation">,</span> <span class="token string">"Input Your Key:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span>byte_4A6580<span class="token punctuation">,</span> v23<span class="token punctuation">)</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> v23<span class="token punctuation">;</span>  <span class="token keyword">do</span>  <span class="token punctuation">{</span>    v4 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v3<span class="token punctuation">;</span>    v3 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    v5 <span class="token operator">=</span> <span class="token operator">~</span>v4 <span class="token operator">&amp;</span> <span class="token punctuation">(</span>v4 <span class="token operator">-</span> <span class="token number">16843009</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x80808080</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token operator">!</span>v5 <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token operator">~</span>v4 <span class="token operator">&amp;</span> <span class="token punctuation">(</span>v4 <span class="token operator">-</span> <span class="token number">16843009</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x8080</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>    v5 <span class="token operator">>>=</span> <span class="token number">16</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token operator">~</span>v4 <span class="token operator">&amp;</span> <span class="token punctuation">(</span>v4 <span class="token operator">-</span> <span class="token number">16843009</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x8080</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>    v3 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token operator">-</span><span class="token function">__CFADD__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE<span class="token punctuation">)</span>v5<span class="token punctuation">,</span> <span class="token punctuation">(</span>_BYTE<span class="token punctuation">)</span>v5<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> v23 <span class="token operator">==</span> <span class="token number">64</span> <span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">__OFADD__</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2004318072</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">__OFADD__</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2004318072</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>      <span class="token function">JUMPOUT</span><span class="token punctuation">(</span>0x4A2A4Fi64<span class="token punctuation">)</span><span class="token punctuation">;</span>    v7 <span class="token operator">=</span> v23<span class="token punctuation">;</span>    v8 <span class="token operator">=</span> v32<span class="token punctuation">;</span>    v9 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>unk_4A4020<span class="token punctuation">;</span>    v10 <span class="token operator">=</span> v32<span class="token punctuation">;</span>    <span class="token function">printf_0</span><span class="token punctuation">(</span>byte_4A68E0<span class="token punctuation">,</span> <span class="token string">"Are You Sure You Want To Keep Waiting...\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v11 <span class="token operator">=</span> v24<span class="token punctuation">;</span>    v12 <span class="token operator">=</span> v24<span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">{</span>      v13 <span class="token operator">=</span> <span class="token function">sub_401DB0</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> 8i64<span class="token punctuation">)</span><span class="token punctuation">;</span>      v11<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> v13<span class="token punctuation">;</span>      v14 <span class="token operator">=</span> 4i64<span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        v15 <span class="token operator">=</span> v14<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> v11<span class="token punctuation">[</span>v14 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">--</span>v14 <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          v15 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v11 <span class="token operator">=</span> v15<span class="token punctuation">;</span>      v16 <span class="token operator">=</span> <span class="token operator">*</span>v9<span class="token punctuation">;</span>      v10<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v10 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> v16<span class="token punctuation">;</span>      v17 <span class="token operator">=</span> 4i64<span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        v18 <span class="token operator">=</span> v17<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> v10<span class="token punctuation">[</span>v17 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">--</span>v17 <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          v18 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      v7 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v10 <span class="token operator">=</span> v18<span class="token punctuation">;</span>      v11 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>      v10 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>      <span class="token operator">++</span>v9<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> v7 <span class="token operator">!=</span> <span class="token operator">&amp;</span>v23<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_403460</span><span class="token punctuation">(</span>v28<span class="token punctuation">,</span> 13i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_403460</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v29<span class="token punctuation">,</span> 14i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_403460</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v30<span class="token punctuation">,</span> 15i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_403460</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v31<span class="token punctuation">,</span> 16i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_4029E0</span><span class="token punctuation">(</span>v24<span class="token punctuation">,</span> v28<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_4029E0</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v25<span class="token punctuation">,</span> v28<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_402030</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v26<span class="token punctuation">,</span> v28<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sub_402030</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v27<span class="token punctuation">,</span> v28<span class="token punctuation">)</span><span class="token punctuation">;</span>    v19 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      v20 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v12<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v12 <span class="token operator">!=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v8 <span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> v20 <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> v32<span class="token punctuation">[</span><span class="token number">36</span> <span class="token operator">*</span> v19 <span class="token operator">-</span> <span class="token number">573</span> <span class="token operator">+</span> v20<span class="token punctuation">]</span> <span class="token operator">!=</span> v32<span class="token punctuation">[</span><span class="token number">36</span> <span class="token operator">*</span> v19 <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">+</span> v20<span class="token punctuation">]</span> <span class="token punctuation">)</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        v21 <span class="token operator">=</span> v20 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v21 <span class="token operator">>=</span> <span class="token number">0</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          v22 <span class="token operator">=</span> v12<span class="token punctuation">[</span>v21<span class="token operator">--</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span> v22 <span class="token operator">!=</span> v8<span class="token punctuation">[</span>v21 <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>            <span class="token keyword">goto</span> LABEL_8<span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token operator">++</span>v19<span class="token punctuation">;</span>      v12 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>      v8 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> v19 <span class="token operator">==</span> <span class="token number">8</span> <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        <span class="token function">sub_401550</span><span class="token punctuation">(</span><span class="token string">"QWB{%s}\n"</span><span class="token punctuation">,</span> v23<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>LABEL_8<span class="token punctuation">:</span>  <span class="token function">sub_401550</span><span class="token punctuation">(</span><span class="token string">"sorry\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逐步分析逻辑:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019005909063.png" alt="image-20211019005909063"></p><p>这里进行了一个判断，判断是否等于64，动调可以知道，这里其实就是判断输入值的长度</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019005923674.png" alt="image-20211019005923674"></p><p>然后就是一些操作，都没有影响我们的输入值。</p><p>最关键的是接下来的几个函数:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019005938572.png" alt="image-20211019005938572"></p><p>前面四个实际上是创造四个key值，内部函数如下:</p><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">void</span> __fastcall <span class="token function">make_key</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// eax</span>  __int64 v4<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// rax</span>  <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// edx</span>  v3 <span class="token operator">=</span> <span class="token function">sub_401EF0</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">// 内部malloc了一大堆空间,并且没有进行释放</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> v3<span class="token punctuation">;</span>  v4 <span class="token operator">=</span> 4i64<span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">{</span>    v5 <span class="token operator">=</span> v4<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> v4 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">--</span>v4 <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">=</span> v5<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于开拓的内存空间并没有释放，会导致并不能直接动调获取，非要动调需要花费一定的时间，换个思路，可以通过部分区间动调判断函数内部进行了什么操作</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019010041434.png" alt="image-20211019010041434"></p><p>可以确定RDX寄存器保存a2的值，RAX寄存器为函数输出值，动调获取多组数据，判断函数内部进行的操作，规律如下:</p><pre class="line-numbers language-c"><code class="language-c">RDX  RAX    <span class="token number">10</span>进制   差值<span class="token number">0X0</span>  <span class="token number">0X5</span>    <span class="token number">5</span>        <span class="token operator">-</span><span class="token number">0x1</span>  <span class="token number">0xD</span>    <span class="token number">13</span>       <span class="token number">8</span>         <span class="token number">0x2</span>  <span class="token number">0x1D</span>   <span class="token number">29</span>       <span class="token number">16</span>        <span class="token comment" spellcheck="true">//从这里开始,可以视作等比数列求和+13</span><span class="token number">0x3</span>  <span class="token number">0x3D</span>   <span class="token number">61</span>       <span class="token number">32</span><span class="token number">0x4</span>  <span class="token number">0x7D</span>   <span class="token number">125</span>      <span class="token number">64</span><span class="token number">0x5</span>  <span class="token number">0xFD</span>   <span class="token number">253</span>      <span class="token number">128</span><span class="token number">0x6</span>  <span class="token number">0x1FD</span>  <span class="token number">509</span>      <span class="token number">256</span><span class="token number">0x7</span>  <span class="token number">0x3FD</span>  <span class="token number">1021</span>     <span class="token number">512</span><span class="token number">0x8</span>  <span class="token number">0x7FD</span>  <span class="token number">2045</span>     <span class="token number">1024</span><span class="token number">0x9</span>  <span class="token number">0XFFD</span>  <span class="token number">4093</span>     <span class="token number">2048</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>基本确定规律:类似于求一个等比数列的和</p><pre class="line-numbers language-c"><code class="language-c">   <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token number">0</span>Sn<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">13</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token number">1</span>   <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>input<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">16</span><span class="token operator">+</span><span class="token number">13</span><span class="token punctuation">,</span>n<span class="token operator">></span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>推出四个key值:</p><pre class="line-numbers language-c"><code class="language-c"><span class="token number">0xfffd</span><span class="token punctuation">,</span><span class="token number">0x1fffd</span><span class="token punctuation">,</span><span class="token number">0x3fffd</span><span class="token punctuation">,</span><span class="token number">0x7fffd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加密部分:<br>xtea加密内部，主要内容:</p><pre class="line-numbers language-c"><code class="language-c">sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">do</span>  <span class="token punctuation">{</span>    <span class="token function">left_move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>__int64<span class="token punctuation">)</span>v72<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// v72=a2&lt;&lt;4</span>    <span class="token function">right_move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>__int64<span class="token punctuation">)</span>v73<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// v73=a2>>5</span>    <span class="token function">Xor</span><span class="token punctuation">(</span>v74<span class="token punctuation">,</span> v72<span class="token punctuation">,</span> v73<span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment" spellcheck="true">// v74=v72^v73</span>    <span class="token function">Plus</span><span class="token punctuation">(</span>v75<span class="token punctuation">,</span> v74<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// v75=v74+a2</span>    v58 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v14 <span class="token operator">=</span> 4i64<span class="token punctuation">;</span>    v57 <span class="token operator">=</span> sum<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      v15 <span class="token operator">=</span> v14<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v56 <span class="token operator">+</span> v14 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">--</span>v14 <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        v15 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    v56 <span class="token operator">=</span> v15<span class="token punctuation">;</span>    v16 <span class="token operator">=</span> sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>    sum <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">0x70C88617</span><span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">// sum+=0x8F3779E9</span>    <span class="token function">Plus</span><span class="token punctuation">(</span>v76<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v56<span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">[</span><span class="token number">9</span> <span class="token operator">*</span> v16<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Xor</span><span class="token punctuation">(</span>v77<span class="token punctuation">,</span> v75<span class="token punctuation">,</span> v76<span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment" spellcheck="true">// all:v0 += (((v1 &lt;&lt; 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum &amp; 3])    sum+=0x8F3779E9</span>    <span class="token function">Plus</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v52<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v52<span class="token punctuation">,</span> v77<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">left_move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>__int64<span class="token punctuation">)</span>v78<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v52<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">right_move</span><span class="token punctuation">(</span><span class="token punctuation">(</span>__int64<span class="token punctuation">)</span>v79<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v52<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Xor</span><span class="token punctuation">(</span>v80<span class="token punctuation">,</span> v78<span class="token punctuation">,</span> v79<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Plus</span><span class="token punctuation">(</span>v81<span class="token punctuation">,</span> v80<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v52<span class="token punctuation">)</span><span class="token punctuation">;</span>    v58 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v17 <span class="token operator">=</span> 4i64<span class="token punctuation">;</span>    v57 <span class="token operator">=</span> sum<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      v18 <span class="token operator">=</span> v17<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v56 <span class="token operator">+</span> v17 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">--</span>v17 <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        v18 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    v56 <span class="token operator">=</span> v18<span class="token punctuation">;</span>    <span class="token function">Plus</span><span class="token punctuation">(</span>v82<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v56<span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">[</span><span class="token number">9</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Xor</span><span class="token punctuation">(</span>v84<span class="token punctuation">,</span> v81<span class="token punctuation">,</span> v82<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Plus</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">,</span> v84<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// all:v1 += (((v0 &lt;&lt; 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum>>11) &amp; 3])</span>  <span class="token punctuation">}</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> sum <span class="token operator">!=</span> <span class="token number">0xE6EF3D20</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">// 0xE6EF3D20=-0x1910C2E0 ==>-9e3779b9//6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后对值进行了Xor处理，是一个变种xtea，tea加密过程一样，也是有点小改动的加密<br>其中delta的值:<br><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019010405937.png" alt="image-20211019010405937"></p><p>同样对值进行了Xor处理，简单计算可以得:delta=0x3d3529bc<br>最后一部分，判断:<br><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20211019010435755.png" alt="image-20211019010435755"></p><p>解题脚本:</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token keyword">void</span> <span class="token function">xtea_decipher</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> num_rounds<span class="token punctuation">,</span> uint32_t v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> uint32_t <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>    uint32_t v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xfd</span><span class="token punctuation">,</span> v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0x1fd</span><span class="token punctuation">,</span> delta<span class="token operator">=</span><span class="token number">0x8F3779E9</span><span class="token punctuation">,</span> sum<span class="token operator">=</span>delta <span class="token operator">*</span> num_rounds<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num_rounds<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        v1 <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sum <span class="token operator">-</span><span class="token operator">=</span> delta<span class="token punctuation">;</span>        v0 <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v1<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> key<span class="token punctuation">[</span>sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">tea_decrypt</span> <span class="token punctuation">(</span>uint32_t<span class="token operator">*</span> v<span class="token punctuation">,</span> uint32_t<span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>    uint32_t v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0x3fd</span><span class="token punctuation">,</span> v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0x7fd</span><span class="token punctuation">,</span> sum<span class="token operator">=</span><span class="token number">0xA6A53780</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span>      uint32_t delta<span class="token operator">=</span><span class="token number">0x3d3529bc</span><span class="token punctuation">;</span>                         uint32_t k0<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k1<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k2<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k3<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                 v1 <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> k2<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> k3<span class="token punctuation">)</span><span class="token punctuation">;</span>        v0 <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> k0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        sum <span class="token operator">-</span><span class="token operator">=</span> delta<span class="token punctuation">;</span>    <span class="token punctuation">}</span>                                                  v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    uint32_t v<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0x1F306772</span><span class="token punctuation">,</span><span class="token number">0xB75B0C29</span><span class="token punctuation">,</span><span class="token number">0x4A7CDBE3</span><span class="token punctuation">,</span><span class="token number">0x2877BDDF</span><span class="token punctuation">,</span><span class="token number">0x1354C485</span><span class="token punctuation">,</span><span class="token number">0x357C3C3A</span><span class="token punctuation">,</span><span class="token number">0x738AF06C</span><span class="token punctuation">,</span><span class="token number">0x89B7F537</span><span class="token punctuation">}</span><span class="token punctuation">,</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0xfffd</span><span class="token punctuation">,</span><span class="token number">0x1fffd</span><span class="token punctuation">,</span><span class="token number">0x3fffd</span><span class="token punctuation">,</span><span class="token number">0x7fffd</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> num_rounds<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">do</span><span class="token punctuation">{</span>        sum<span class="token operator">-</span><span class="token operator">=</span><span class="token number">0x70C88617</span><span class="token punctuation">;</span>        num_rounds<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>sum<span class="token operator">!=</span><span class="token number">0xE6EF3D20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">;</span>i<span class="token operator">+</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">xtea_decipher</span><span class="token punctuation">(</span>num_rounds<span class="token punctuation">,</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">tea_decrypt</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%08X%08X"</span><span class="token punctuation">,</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//answer:QWB{CD402B6A139283822F0DEA49E65794356F44EA9B3F56652F2DA39881EC491878}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 加密算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> 强网杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五空间_strangelanguage</title>
      <link href="/2021/09/27/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4_strangelanguage/"/>
      <url>/2021/09/27/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4_strangelanguage/</url>
      
        <content type="html"><![CDATA[<p>第五空间_strange language</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打比赛的时候，前面都ok了，就死在了最后一步动调，之前用的是wmx大佬给的转C脚本，代码量11000+，就不敢去分析了，正好wmx大佬给了两种思路，一是用 pintool 侧信道爆破，另外一个是直接用ida调试，我选择了第一种，结果死在了安装的路上….</p><p>再次来尝试一下。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927000449220.png" alt="image-20210927000449220"></p><p>这就是py合成的exe文件，可以通过pyinstxtrator.py脚本实现解析</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927000505542.png" alt="image-20210927000505542"></p><p>然后会在解析包中发现main文件以及一个名为struct文件，通常情况下main不是pyc文件，因为pyinstxtrator.py的版本与mainpyc版本不一致，导致pyc前缀丢失，所以我们需要人为添加。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927000529992.png" alt="image-20210927000529992"></p><p>添加的pyc前缀哪里来呢，看struct的前缀，把前缀白嫖过来就可以了</p><p>顺带另存为pyc文件，然后通过uncompyle6解pyc文件就行</p><p>这是解析得到的结果，</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># uncompyle6 version 3.7.4</span><span class="token comment" spellcheck="true"># Python bytecode 3.8 (3413)</span><span class="token comment" spellcheck="true"># Decompiled from: Python 3.6.9 (default, Jan 26 2021, 15:33:00) </span><span class="token comment" spellcheck="true"># [GCC 8.4.0]</span><span class="token comment" spellcheck="true"># Embedded file name: main.py</span><span class="token comment" spellcheck="true"># Compiled at: 1995-09-28 00:18:56</span><span class="token comment" spellcheck="true"># Size of source mod 2**32: 272 bytes</span><span class="token keyword">import</span> brainfuckbrainfuck<span class="token punctuation">.</span>main_check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># okay decompiling main.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明接下来我们需要去分析brainfuck</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927000641732.png" alt="image-20210927000641732"></p><p>pyd文件，拖入ida中查看</p><blockquote><p>pyd文件，相当于C中的dll文件，只不过不需要环境，可以直接运行</p></blockquote><p>拖入ida后，最开始我是根据题目提示，确定是brain fuck语言，进而找到数据，官方wp中是通过查找字符串<code>brainfuck.main_check</code>确定，get一个知识点</p><blockquote><p>一个快速定位到 <strong>brainfuck.main_check</strong> 函数的方式是根据 python dll 模块的异常机制 。python 函数的末尾会调用 __Pyx_AddTraceback ，记录函数名，行号，文件名。我们只要在 IDA 的字符串列表中搜索 “brainfuck.main_check” ，就能定位到 main_check 函数。</p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927001827386.png" alt="image-20210927001827386"></p><p>获得内容</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927001855781.png" alt="image-20210927001855781"></p><p>接下来就是自己构造一个brainfuck解析脚本了</p><blockquote><p>网上现成的不能正确使用，只能自己造了</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">shrinkBFCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>    cPos2Vars <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">#位置对应的变量</span>    cPos2Change <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">#位置中 + 号 增加的值</span>    varPos <span class="token operator">=</span> <span class="token number">0</span>    nCode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    incVal <span class="token operator">=</span> <span class="token number">0</span>    lc <span class="token operator">=</span> None    dataChangeOp <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    dataShiftOp <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">'&lt;'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        c <span class="token operator">=</span> code<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> c <span class="token operator">not</span> <span class="token keyword">in</span> dataChangeOp <span class="token operator">and</span> lc <span class="token keyword">in</span> dataChangeOp<span class="token punctuation">:</span>            cPos2Change<span class="token punctuation">[</span>len<span class="token punctuation">(</span>nCode<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> incVal            cPos2Vars<span class="token punctuation">[</span>len<span class="token punctuation">(</span>nCode<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> varPos            nCode<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>            incVal <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">'>'</span><span class="token punctuation">:</span>            varPos <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">'&lt;'</span><span class="token punctuation">:</span>            varPos <span class="token operator">-=</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> c <span class="token keyword">in</span> dataChangeOp<span class="token punctuation">:</span>                incVal <span class="token operator">+=</span> <span class="token number">1</span> <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">'+'</span> <span class="token keyword">else</span> <span class="token operator">-</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true">#if lc == '>' or lc == '&lt;':</span>                <span class="token comment" spellcheck="true">#    cPos2Vars[len(nCode)] = varPos</span>                cPos2Vars<span class="token punctuation">[</span>len<span class="token punctuation">(</span>nCode<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> varPos                nCode<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>        lc <span class="token operator">=</span> c    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>nCode<span class="token punctuation">)</span><span class="token punctuation">,</span> cPos2Vars<span class="token punctuation">,</span> cPos2Change<span class="token keyword">def</span> <span class="token function">generatePyCode</span><span class="token punctuation">(</span>shellCode<span class="token punctuation">,</span> pVars<span class="token punctuation">,</span> pChange<span class="token punctuation">)</span><span class="token punctuation">:</span>    pyCodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    bStacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    whileVarCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> c <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>shellCode<span class="token punctuation">)</span><span class="token punctuation">:</span>        d_pos <span class="token operator">=</span> i <span class="token keyword">if</span> i <span class="token operator">not</span> <span class="token keyword">in</span> pVars <span class="token keyword">else</span> pVars<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        d_change <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">if</span> i <span class="token operator">not</span> <span class="token keyword">in</span> pChange <span class="token keyword">else</span> pChange<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        indentLevel <span class="token operator">=</span> len<span class="token punctuation">(</span>bStacks<span class="token punctuation">)</span>        indentStr <span class="token operator">=</span> <span class="token string">' '</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>indentLevel<span class="token punctuation">)</span>        <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">'['</span><span class="token punctuation">:</span>            pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}while data[{}] != 0:'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">)</span><span class="token punctuation">)</span>            bStacks<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            whileVarCache<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">']'</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'['</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'miss match of {}] found between {} and {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            cNum <span class="token operator">=</span> i<span class="token operator">-</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> cNum <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                <span class="token keyword">del</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">del</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                d_pos_l <span class="token operator">=</span> i<span class="token number">-1</span> <span class="token keyword">if</span> i<span class="token number">-1</span> <span class="token operator">not</span> <span class="token keyword">in</span> pVars <span class="token keyword">else</span> pVars<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span>                pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] = 0'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">' '</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token punctuation">(</span>indentLevel<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d_pos_l<span class="token punctuation">)</span><span class="token punctuation">)</span>            whileCode <span class="token operator">=</span> shellCode<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">:</span> i<span class="token punctuation">]</span>            <span class="token keyword">if</span> cNum<span class="token operator">></span><span class="token number">2</span> <span class="token operator">and</span> <span class="token string">'['</span> <span class="token operator">not</span> <span class="token keyword">in</span> whileCode <span class="token operator">and</span> <span class="token operator">not</span> <span class="token string">'%'</span> <span class="token keyword">in</span> whileCode<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># nested loop is a bit complicated, just skip</span>                loopCondvar <span class="token operator">=</span> bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>                d_pos_l <span class="token operator">=</span> loopCondvar <span class="token keyword">if</span> loopCondvar <span class="token operator">not</span> <span class="token keyword">in</span> pVars <span class="token keyword">else</span> pVars<span class="token punctuation">[</span>loopCondvar<span class="token punctuation">]</span>                whileVars <span class="token operator">=</span> whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>                cVarChange <span class="token operator">=</span> whileVars<span class="token punctuation">[</span>d_pos_l<span class="token punctuation">]</span>                <span class="token comment" spellcheck="true"># remove statement of same indent</span>                <span class="token keyword">while</span> len<span class="token punctuation">(</span>pyCodes<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>indentStr<span class="token punctuation">)</span> <span class="token operator">and</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>len<span class="token punctuation">(</span>indentStr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">' '</span><span class="token punctuation">:</span>                      pyCodes<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>                pyCodes<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">#del pyCodes[bStacks[-1][1]-i:]</span>                <span class="token keyword">for</span> vPos<span class="token punctuation">,</span> vChange <span class="token keyword">in</span> whileVars<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> vPos <span class="token operator">==</span> d_pos_l<span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    ctimes <span class="token operator">=</span> abs<span class="token punctuation">(</span>vChange <span class="token operator">/</span> cVarChange<span class="token punctuation">)</span>                    ctimesStr <span class="token operator">=</span> <span class="token string">''</span> <span class="token keyword">if</span> ctimes<span class="token operator">==</span><span class="token number">1</span> <span class="token keyword">else</span> <span class="token string">'{}*'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>ctimes<span class="token punctuation">)</span>                    cSign <span class="token operator">=</span> <span class="token string">'+'</span> <span class="token keyword">if</span> vChange <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'-'</span>                    pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] {}= {}data[{}]'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">' '</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token punctuation">(</span>indentLevel<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                                         vPos<span class="token punctuation">,</span> cSign<span class="token punctuation">,</span>  ctimesStr<span class="token punctuation">,</span> d_pos_l<span class="token punctuation">)</span><span class="token punctuation">)</span>                pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] = 0'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">' '</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token punctuation">(</span>indentLevel<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d_pos_l<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">del</span> whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            bStacks<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">'.'</span><span class="token punctuation">:</span>            pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}print(data[{}])'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">','</span><span class="token punctuation">:</span>            pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] = ord(stdin.read(1))'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>            opSign <span class="token operator">=</span> <span class="token string">'-='</span> <span class="token keyword">if</span> d_change <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'+='</span>            <span class="token keyword">if</span> pyCodes <span class="token operator">and</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'{}data[{}] = 0'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">)</span><span class="token punctuation">:</span>                pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'{}data[{}] = {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">,</span> d_change<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] {} {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">,</span> opSign<span class="token punctuation">,</span> abs<span class="token punctuation">(</span>d_change<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> bStacks<span class="token punctuation">:</span>                whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>d_pos<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>d_pos<span class="token punctuation">]</span> <span class="token operator">+=</span> d_change        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>            opSign <span class="token operator">=</span> <span class="token string">'+='</span> <span class="token keyword">if</span> d_change <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'-='</span>            <span class="token keyword">if</span> pyCodes <span class="token operator">and</span> pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'{}data[{}] = 0'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">)</span><span class="token punctuation">:</span>                pyCodes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'{}data[{}] = {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">,</span> <span class="token operator">-</span>d_change<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] {} {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">,</span> opSign<span class="token punctuation">,</span> abs<span class="token punctuation">(</span>d_change<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> bStacks<span class="token punctuation">:</span>                whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>d_pos<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                whileVarCache<span class="token punctuation">[</span>bStacks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>d_pos<span class="token punctuation">]</span> <span class="token operator">-=</span> d_change        <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">'%'</span><span class="token punctuation">:</span>            pyCodes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'{}data[{}] %= data[{}]'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>indentStr<span class="token punctuation">,</span> d_pos<span class="token punctuation">,</span> d_pos<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>pyCodes<span class="token punctuation">)</span>shellcode <span class="token operator">=</span> <span class="token string">">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;>&lt;[-]+>&lt;>[-]&lt;&lt;&lt;[-]>>[>+&lt;&lt;&lt;+>>-]>[&lt;+>-]&lt;>&lt;[-]>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++++[&lt;++++++>-]&lt;++>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;[[-][-]>[-]&lt;&lt;&lt;&lt;[>>>+>+&lt;&lt;&lt;&lt;-]>>>>[&lt;&lt;&lt;&lt;+>>>>-]&lt;[&lt;+>[-]]]&lt;[>[-]>&lt;,>&lt;>[-]&lt;&lt;[-]>[>+&lt;&lt;+>-]>[&lt;+>-]&lt;>&lt;[-]>[-]&lt;&lt;[>+>+&lt;&lt;-]>>[&lt;&lt;+>>-][-]++++++++++>&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[>>[-]>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>-]>[&lt;+>-]&lt;>&lt;&lt;&lt;[-]][-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]>[-]&lt;&lt;&lt;&lt;[>>>+>+&lt;&lt;&lt;&lt;-]>>>>[&lt;&lt;&lt;&lt;+>>>>-]&lt;&lt;&lt;[>>>[-]&lt;[>+&lt;-]&lt;+[>+&lt;-]&lt;-[>+&lt;-]>]>>>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;]&lt;&lt;[-]>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++++[&lt;++++++>-]&lt;++>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;[[-][-]>[-]&lt;&lt;&lt;&lt;[>>>+>+&lt;&lt;&lt;&lt;-]>>>>[&lt;&lt;&lt;&lt;+>>>>-]&lt;[&lt;+>[-]]]&lt;][-]>[-]>[-]>[-]>[-]>[-]>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]++++++++++[&lt;++++++++++>-]&lt;++>&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[[-][-]+>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]+++++++++[&lt;++++++++++++>-]&lt;>&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[&lt;+>[-]]]&lt;[[-][-]++>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]++++++++[&lt;++++++++++++>-]&lt;+>&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[&lt;+>[-]]]&lt;[[-][-]+++>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]++++++++[&lt;+++++++++++++>-]&lt;->&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[&lt;+>[-]]]&lt;[[-][-]++++>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]+++++++++++[&lt;+++++++++++>-]&lt;++>&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[&lt;+>[-]]]&lt;[[-][-]>[-]++++++[&lt;++++++>-]&lt;+>[-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]+++++++++[&lt;++++++++++++++>-]&lt;->&lt;&lt;[->-&lt;]+>[&lt;->[-]]&lt;[&lt;+>[-]]]&lt;>[-]&lt;&lt;[-]>[>+&lt;&lt;+>-]>[&lt;+>-]&lt;>&lt;[-]>[-]+>[-]>[-]&lt;&lt;&lt;&lt;&lt;[>>>>+>+&lt;&lt;&lt;&lt;&lt;-]>>>>>[&lt;&lt;&lt;&lt;&lt;+>>>>>-]&lt;>[-]+&lt;[>-&lt;[-]]>[&lt;+>-]&lt;[&lt;&lt;+>->[-]]&lt;[[-]>[-]&lt;&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>>[&lt;&lt;&lt;+>>>-]&lt;>[-]+&lt;[>-&lt;[-]]>[&lt;+>-]&lt;[&lt;+>[-]]][-]+&lt;[>->[-]>[-]&lt;>++++++++++[&lt;+++++++++++>-]&lt;.+.-.+.-.+.&lt;&lt;[-]]>[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]+>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>[-]+++++++[&lt;++++++++++++>-]&lt;->[-]+++++++++++++++>[-]>[-]+++++++++[&lt;++++++++++>-]&lt;>[-]>[-]+++++++[&lt;++++++++++++>-]&lt;>[-]>[-]++++++++[&lt;++++++++++>-]&lt;>[-]>[-]+++++++[&lt;++++++++++++>-]&lt;+>[-]+++>[-]++>[-]>[-]+++++++>[-]>[-]+++++++[&lt;++++++++++++>-]&lt;++>[-]+++++++>[-]+++++++>[-]>[-]+++++++[&lt;+++++++++++++>-]&lt;>[-]+++++++++>[-]>[-]>[-]++++++++[&lt;++++++++++>-]&lt;>[-]+++++>[-]++>[-]+++>[-]>[-]+++++++[&lt;+++++++++++++>-]&lt;++>[-]>[-]+++++++[&lt;+++++++++++++>-]&lt;+>[-]>[-]++++++++[&lt;++++++++++>-]&lt;>[-]>[-]+++++++++[&lt;+++++++++>-]&lt;>[-]>[-]+++++++++[&lt;+++++++++>-]&lt;+>[-]>[-]+++++++[&lt;++++++++++++>-]&lt;>[-]>[-]+++++++++[&lt;++++++++++>-]&lt;>[-]>[-]++++++++[&lt;++++++++++++>-]&lt;->[-]++>[-]>[-]++++++++[&lt;+++++++++++>-]&lt;->[-]+++++++>[-]>[-]++++[&lt;+++++++++++++>-]&lt;>>&lt;[-]+++++>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;>&lt;[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++++[&lt;++++++>-]&lt;>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;[[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]+>&lt;&lt;>[&lt;+>-][-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;]&lt;&lt;>>>>>>>[-]>>[-]&lt;[-]--------[++++++++&lt;&lt;[-]&lt;[-]&lt;[-]&lt;[-]&lt;[-]++&lt;&lt;[->>-[>+>>+&lt;&lt;&lt;-]>[&lt;+>-]>>>>+&lt;&lt;-[&lt;+&lt;&lt;++>>>>>--&lt;&lt;+]&lt;&lt;&lt;&lt;&lt;]>>>>[&lt;&lt;&lt;&lt;+>>>>-]&lt;&lt;[-]++&lt;[->-[>+>>+&lt;&lt;&lt;-]>[&lt;+>-]>>>+&lt;-[>--&lt;&lt;+&lt;&lt;++>>>+]&lt;&lt;&lt;&lt;]>>>[&lt;&lt;&lt;+>>>-]>>[>-&lt;-]>[[-]&lt;&lt;+>>]>[&lt;+&lt;+>>-]&lt;[>+&lt;-]&lt;[&lt;[&lt;+>-]&lt;[>++&lt;-]>>-]&lt;[>>>>+&lt;&lt;&lt;&lt;-]>>>-------]>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>[-]&lt;[>+&lt;-]&lt;+[>+&lt;-]&lt;-[>+&lt;-]>]>>>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;]&lt;[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++++[&lt;++++++>-]&lt;>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;][-]>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;>&lt;[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++[&lt;++++++++>-]&lt;>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;[[-]+++++>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;&lt;>[&lt;+>-][-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;][-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]&lt;[>>[-]+&lt;[>+&lt;-]&lt;-[>+&lt;-]>]>>[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[&lt;&lt;+>>-]&lt;[&lt;[&lt;+>-]>-[&lt;+>-]&lt;]&lt;&lt;[->-&lt;]>[&lt;+>[-]]&lt;[>>[-]>&lt;>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]>[&lt;+>-]&lt;>&lt;&lt;&lt;[-]][-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]&lt;[-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]>[-]++++[&lt;++++++++>-]&lt;>&lt;&lt;>>[-]>[-]&lt;&lt;[>[-]&lt;&lt;[>>+>+&lt;&lt;&lt;-]>>[&lt;&lt;+>>-]+>[[-]&lt;-&lt;&lt;->>>]&lt;&lt;-]&lt;[-]>>[&lt;&lt;+>>-]&lt;&lt;][-]>[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-][-]+&lt;[>->[-]>[-]&lt;>++++++[&lt;+++++++++++>-]&lt;+.>++++[&lt;+++++++++++>-]&lt;.-.-------.+++++++++++.>++++[&lt;---->-]&lt;-.>+++[&lt;++++++>-]&lt;+.-.>+++++++++[&lt;--------->-]&lt;-.&lt;&lt;[-]]>[>[-]>[-]&lt;>++++++++++[&lt;+++++++++++>-]&lt;.+.-.+.-.+.&lt;-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;"</span>shrinkCode<span class="token punctuation">,</span> pVars<span class="token punctuation">,</span> pChange <span class="token operator">=</span> shrinkBFCode<span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>generatePyCode<span class="token punctuation">(</span>shrinkCode<span class="token punctuation">,</span> pVars<span class="token punctuation">,</span> pChange<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里我引用的官方wp脚本</p></blockquote><p>然后再vscode里面进行对python的动调，可以将62行注释掉，不影响调试，最终获取调试大致操作(我就是死在这上面的，哭死0rz</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210927002428451.png" alt="image-20210927002428451"></p><p>一共38位数据(flag{}外壳加32位数据,逐位进行异或操作，然后和上图值进行对比脚本如下:</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>    flag<span class="token operator">+=</span>chr<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag{"</span><span class="token operator">+</span>flag<span class="token punctuation">[</span><span class="token punctuation">:</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"}"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag：</p><pre class="line-numbers language-python"><code class="language-python">flag<span class="token punctuation">{</span>d78b6f30225cdc811adfe8d4e7c9fd34<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编译语言 </category>
          
          <category> Python逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五空间 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021羊城杯_DeltX</title>
      <link href="/2021/09/18/%E7%BE%8A%E5%9F%8E%E6%9D%AF_DeltX/"/>
      <url>/2021/09/18/%E7%BE%8A%E5%9F%8E%E6%9D%AF_DeltX/</url>
      
        <content type="html"><![CDATA[<p>直接打开就能看到伪代码，逐步分析</p><p>开始判断是否加上了flag外壳，并判断了长度</p><pre class="line-numbers language-c"><code class="language-c">  Input <span class="token operator">=</span> 0i64<span class="token punctuation">;</span>  v170 <span class="token operator">=</span> 0i64<span class="token punctuation">;</span>  v171 <span class="token operator">=</span> 0i64<span class="token punctuation">;</span>  <span class="token function">sub_140001020</span><span class="token punctuation">(</span><span class="token string">"Input your flag here:\r\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">,</span> envp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_140001080</span><span class="token punctuation">(</span><span class="token string">"%46s"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>Input<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>_BYTE<span class="token punctuation">)</span>Input <span class="token operator">!=</span> <span class="token string">'S'</span>    <span class="token operator">||</span> <span class="token operator">*</span><span class="token punctuation">(</span>_WORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>Input <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'na'</span>    <span class="token operator">||</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>Input <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'roFg'</span>    <span class="token operator">||</span> <span class="token function">BYTE7</span><span class="token punctuation">(</span>Input<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'{'</span>    <span class="token operator">||</span> <span class="token function">BYTE8</span><span class="token punctuation">(</span>v171<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'}'</span> <span class="token punctuation">)</span>                     <span class="token comment" spellcheck="true">// SangFor{******************}</span>  <span class="token punctuation">{</span>                                             <span class="token comment" spellcheck="true">// 动调确定len=41</span>    <span class="token keyword">goto</span> LABEL_155<span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">// Error</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>长度判断需要在汇编层面看（最开始动调的时候，没有注意长度问题，输入任意长度的值，在套了正确外壳的情况下，依旧会跳转到LABEL_155），仔细看判断<code>{</code>,与<code>}</code>之间判断的值长度，就可以知道具体输入了多少值</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210918214510465.png" alt="image-20210918214510465"></p><p>然后进行了一大堆的值进行</p><pre class="line-numbers language-c"><code class="language-c"> v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  I <span class="token operator">=</span> 0i64<span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>                                   <span class="token comment" spellcheck="true">// 能输入的值:[0-9][A-Z]</span>  <span class="token punctuation">{</span>    v7 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>Input <span class="token operator">+</span> I <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>Input <span class="token operator">+</span> I <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">9u</span> <span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    v8 <span class="token operator">=</span> v5 <span class="token operator">-</span> <span class="token number">0x30</span><span class="token punctuation">;</span>LABEL_11<span class="token punctuation">:</span>    <span class="token operator">++</span>I<span class="token punctuation">;</span>    v5 <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v7 <span class="token operator">+</span> v8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> I <span class="token operator">>=</span> <span class="token number">4</span> <span class="token punctuation">)</span>                               <span class="token comment" spellcheck="true">// 将四个字符转换成十六进制。比如说输入1234,转换成0x1234</span>    <span class="token punctuation">{</span>      v9 <span class="token operator">=</span> v5 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">;</span>      v10 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">goto</span> LABEL_14<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span><span class="token punctuation">(</span>v7 <span class="token operator">-</span> <span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">5u</span> <span class="token punctuation">)</span>  <span class="token punctuation">{</span>    v8 <span class="token operator">=</span> v5 <span class="token operator">-</span> <span class="token string">'7'</span><span class="token punctuation">;</span>    <span class="token keyword">goto</span> LABEL_11<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>吐槽一下，明明可以写函数或者循环实现这个操作，但是它就是要一个一个来写….后面判断也是….</p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210918215816924.png" alt="image-20210918215816924"></p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210918215840421.png" alt="image-20210918215840421"></p><p>然后两两数字为一组，进行运算，并将运算后的值和对应值比较，类似于解二元一次方程。</p><blockquote><p>这里我是直接动调看输出值和两个输入值有什么关联，多次尝试得出关系，并没有仔细看内部的位运算，理论上可以直接模拟代码获取两个输入值</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#两者关系</span>flag0<span class="token operator">*</span>flag1<span class="token operator">=</span>num1flag0<span class="token operator">-</span>flag1<span class="token operator">=</span>num2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>搓脚本：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Save</span><span class="token punctuation">(</span>mul<span class="token punctuation">,</span>sub<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> a <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0xffff</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xffff</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">*</span>b<span class="token operator">==</span>mul<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%X%X"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    mul<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x249E15C5</span><span class="token punctuation">,</span><span class="token number">0x34C7EAE2</span><span class="token punctuation">,</span><span class="token number">0x637973BA</span><span class="token punctuation">,</span><span class="token number">0xE5FD104</span><span class="token punctuation">]</span>    sub<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xFFFF59BC</span><span class="token punctuation">,</span><span class="token number">0x216B</span><span class="token punctuation">,</span><span class="token number">0x819D</span><span class="token punctuation">,</span><span class="token number">0x9393</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"SangFor{"</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>mul<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        Save<span class="token punctuation">(</span>mul<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>sub<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"}"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag:</p><pre class="line-numbers language-python"><code class="language-python">SangFor<span class="token punctuation">{</span><span class="token number">2C7BD2BF862564BAED0B6B6EA94F15BC</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210918220729796.png" alt="image-20210918220729796"></p>]]></content>
      
      
      <categories>
          
          <category> 杂货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> 羊城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021羊城杯_EasyVM</title>
      <link href="/2021/09/17/%E7%BE%8A%E5%9F%8E%E6%9D%AF_EasyVM/"/>
      <url>/2021/09/17/%E7%BE%8A%E5%9F%8E%E6%9D%AF_EasyVM/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>主函数</p><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> v1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+18h] [ebp-10h]</span>  <span class="token function">sub_80486BB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v1 <span class="token operator">=</span> <span class="token function">sub_8048F45</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>v1 <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>unk_804B0C0<span class="token punctuation">;</span>  <span class="token function">sub_80491C8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">// 类似于xxtea,Smc自解密</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span>__cdecl <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sub_80487A8<span class="token punctuation">)</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依旧用了Smc自解密，这次是类似xxtea解密,思路一样，直接动调就能看到真正的加密函数内容</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210917213645563.png" alt="image-20210917213645563">这里a[8]获取值，然后确定加密流程，我们需要找到a[8]的值都是从哪里”进货”的，在第一次比较开始之前，肯定会有一个赋值的操作，找到”进货点”，进而确定流程。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210917214133673.png" alt="image-20210917214133673"></p><p>既然有了“进货流程”，那就直接跟着走一遍，然后再具体分析过程中做了什么，自己人脑分析太费脑+费时，用脚本代替人脑分析:</p><blockquote><p>其中有个坑点，就是在分析if(a2[8] == 0x80)内操作的时候， a2[sub_804875F(a2, 1)] = *(_DWORD *)(a2[8] + 2);是将四个字节赋值给了前面参数，所以我们在脚本中，需要注意一下这个点</p></blockquote><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span>  <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span>  <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span>  <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span>  <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span>  <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span>  <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span>  <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span>  <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span>  <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span>  <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span>  <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span>  <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>  <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span>  <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span>  <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span>  <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span>  <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span>  <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span>  <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span>  <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span>  <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>  <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>  <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>  <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span>  <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span>  <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span>  <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span>  <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">]</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Start"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#0x71,0x41,0x44,0x76,0x30,0x34,0xA4实际上都不用写,因为a数组中并没有这些数</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x71</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[6]-=4,a[6]=0x%x"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">5</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x41</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]+=a[2]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x42</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]-=a[4]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x43</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]*=a[3]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x37</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]=a[5]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x38</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]^=a[4]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x39</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]^=a[5]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x35</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[5]=a[1]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xF7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]+=a[1]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x44</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]/=a[5]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#最大的坑点,如果没有注意到,直接努力白费(小端存储</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[%d]=0X%x%x%x%x"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">6</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x77</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]^=a[9]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x53</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"putchar(a[3])"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x22</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]>>=a[2]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x23</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]&lt;&lt;=a[2]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x99</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"break"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x76</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[3]=a[6],a[6]=0,a[6]+=4"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">5</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x54</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"v2=a[3],v2=getchar()"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]|=a[2]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x31</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]&amp;=a[2]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[3]=0x%x"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]=0x6FEBF867"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]=a[1]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[4]=a[1]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x34</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[2]=0x%x"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xFE</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]=a[9]"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0x11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]=*******"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xA0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"if(a[1]!=0x6FEBF967)\n"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xA1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"read()"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xB1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]=byte0"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xB2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]=byte1"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xA4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"byte0[%d]=a[1]"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">4</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xB3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]=byte2"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xB4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[9]=byte3"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xC1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a[1]=flag[%d]"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xC7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"if(byte_804B060!=a[1])\n"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xC8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"if(byte_804B064!=a[1])\n"</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xC2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"if(0x%x!=a[1])\n"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        i<span class="token operator">+=</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>为了更好分析,在每次if后都加了一个换行</p></blockquote><p>其中byte0~3:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210917214813251.png" alt="image-20210917214813251"></p><p>可以很明显的知道前32位都是进行一次简单的异或，但是异或是从一个数组里面取出的，而且每次异或的下标没有规律（也许是我找不出来)，人为提取，获取前32位值:</p><pre class="line-numbers language-python"><code class="language-python">xor<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x7B</span><span class="token punctuation">,</span><span class="token number">0x2F</span><span class="token punctuation">,</span><span class="token number">0x37</span><span class="token punctuation">,</span><span class="token number">0xE8</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">#异或值,即上面的byte0~3</span>xor_number<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>cmp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">221</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">137</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">142</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">219</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">217</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>cmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>chr<span class="token punctuation">(</span>cmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>xor<span class="token punctuation">[</span>xor_number<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#answer:16584abc45baff901c59dde3b1bb6701</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面部分进行位运算什么的，由于出现了位运算等容易丢失数据的操作，直接爆破。</p><p>一点一点的爆破，四个进行爆破就花了两分多钟，分别爆破获得内容：</p><blockquote><p>我确定不了范围,就直接选择的(32,127),能确定范围可以减少很多时间</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#flag[32]~flag[35]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                      <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>       <span class="token keyword">for</span> l <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">10</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>i        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">24</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>j        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">16</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>k        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">8</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>l        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">5</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">7</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x98f17723</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">24</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x35e4b920</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">18</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span><span class="token operator">==</span><span class="token number">0x6FEBF967</span><span class="token punctuation">)</span><span class="token punctuation">:</span>              <span class="token keyword">print</span><span class="token punctuation">(</span>chr<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span>chr<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span>chr<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">+</span>chr<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#answer:a254</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里就不放后面爆破代码了，直接给结果</p><blockquote><p>提示一下,一定要注意溢出问题，不然得不到后续答案的</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#flag[36]~flag[39]:b06c</span><span class="token comment" spellcheck="true">#flag[40]~flag[41]:dc23</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>拼接起来，加个外壳，获得flag:</p><pre class="line-numbers language-python"><code class="language-python">SangFor<span class="token punctuation">{</span><span class="token number">16584abc45baff901c59dde3b1bb6701a254b06cdc23</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 杂货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> 羊城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021羊城杯_EasySmc</title>
      <link href="/2021/09/17/2021%E7%BE%8A%E5%9F%8E%E6%9D%AF_EasySmc/"/>
      <url>/2021/09/17/2021%E7%BE%8A%E5%9F%8E%E6%9D%AF_EasySmc/</url>
      
        <content type="html"><![CDATA[<p>主函数</p><pre class="line-numbers language-C"><code class="language-C">int __cdecl main(){  int v1; // [esp+18h] [ebp-10h]  sub_80486BB();  v1 = loc_8048F45();  *(_DWORD *)(v1 + 32) = &unk_804B0C0;  sub_80491C8();                                // 处理对象是代码段,说明是SMC自解密  ((void (__cdecl *)(int))loc_80487A8)(v1);  return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>动调让程序运行解密代码,运行完成后,再重新构建一下main函数</p><blockquote><p>先u然后c，再之后p；也可以将最后main函数结尾构建到<code>retn</code>那里,不然会导致不能f5</p></blockquote><p>f5之后，就能看见加密函数内的伪代码，比较好分析。</p><p>首先让你输入值,然后会读取共64位的数据到v95数组中</p><pre class="line-numbers language-c"><code class="language-c">  v95<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> xmmword_7FF7FD76E340<span class="token punctuation">;</span>  v95<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> xmmword_7FF7FD76E350<span class="token punctuation">;</span>  v95<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> xmmword_7FF7FD76E360<span class="token punctuation">;</span>  v95<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> xmmword_7FF7FD76E370<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后根据输入长度判断是否进行<code>do while</code>中的循环（只运行一遍的循环</p><blockquote><p>后面还有一大串,未列举出来</p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210917091529744.png" alt="image-20210917091529744"></p><p>但是我们实际上不用管这里面做了什么，因为后面会将这里覆盖掉</p><pre class="line-numbers language-c"><code class="language-c">  v13 <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> v12 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">// v12=0,v13=16*0+1=1</span>  v71 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>v13 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">// v71=0</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v71<span class="token punctuation">;</span> v71 <span class="token operator">&lt;</span> v11<span class="token punctuation">;</span> v94<span class="token punctuation">[</span>v73 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> v74 <span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 从零开始,三个一组,类似于base64</span>    <span class="token punctuation">{</span>      v73 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v71<span class="token punctuation">;</span>      v71 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>v71 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v74 <span class="token operator">=</span> input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v75 <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v94<span class="token punctuation">[</span>v73<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA6</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// v95是len=64的数字集,说明这里是进行魔改后的base64加密</span>      v76 <span class="token operator">=</span> input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      i <span class="token operator">+</span><span class="token operator">=</span> 3i64<span class="token punctuation">;</span>      v94<span class="token punctuation">[</span>v73 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v74 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> v75<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA3</span><span class="token punctuation">;</span>      <span class="token function">LOBYTE</span><span class="token punctuation">(</span>v75<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v76 <span class="token operator">>></span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v74 <span class="token operator">&amp;</span> <span class="token number">0xF</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA9</span><span class="token punctuation">;</span>      <span class="token function">LOBYTE</span><span class="token punctuation">(</span>v74<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span>v76 <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xAC</span><span class="token punctuation">;</span>      v94<span class="token punctuation">[</span>v73 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v75<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里对值进行了覆盖，所以上面<code>do while</code>循环并没有作用。然后根据剩余个数，往末尾填值</p><pre class="line-numbers language-c"><code class="language-c">  v77 <span class="token operator">=</span> v9 <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> v11<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v77 <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span>                               <span class="token comment" spellcheck="true">// 当还剩一位时,前两位算法填充,后两位:14,最后补个0</span>  <span class="token punctuation">{</span>    v78 <span class="token operator">=</span> input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> v11<span class="token punctuation">]</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'1'</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'4'</span><span class="token punctuation">;</span>    v79 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v78 <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA3</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span>v78 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA6</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v79<span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> v77 <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">)</span>                          <span class="token comment" spellcheck="true">// 当还剩两位时,前三位算法填充,后一位:4,最后再加个0</span>  <span class="token punctuation">{</span>    v80 <span class="token operator">=</span> input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v81 <span class="token operator">=</span> input<span class="token punctuation">.</span>m128i_i8<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> v11<span class="token punctuation">]</span><span class="token punctuation">;</span>    v82 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v80 <span class="token operator">&amp;</span> <span class="token number">0xFu</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA9</span><span class="token punctuation">;</span>    v83 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v80 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v81 <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA3</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v95 <span class="token operator">+</span> <span class="token punctuation">(</span>v81 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA6</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v83<span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v82<span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'4'</span><span class="token punctuation">;</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11 <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span>  <span class="token punctuation">{</span>                                             <span class="token comment" spellcheck="true">// 没有剩下填充0</span>    v94<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> v11<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现，末尾都会额外填零，填零是为了后面和值比较时，确定停止的位置</p><blockquote><p>ida中数据末尾会自动填零，确保将数据分割开来</p></blockquote><p>我们再来看比较值</p><pre class="line-numbers language-c"><code class="language-c">v84 <span class="token operator">=</span> <span class="token string">"H>oQn6aqLr{DH6odhdm0dMe`MBo?lRglHtGPOdobDlknejmGI|ghDb&lt;4"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 比较值</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后两位为<code>&lt;4</code>,说明最后剩余两位。（也可以通过比较值的长度获取输入值的长度</p><p>看完整个算法过程，就可以开始快乐的搓脚本了</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> base64base64_<span class="token operator">=</span><span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span>fake_base64<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span>   <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span>   <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span>   <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span>   <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span>   <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span>   <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">]</span>Xor<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xA6</span><span class="token punctuation">,</span><span class="token number">0xA3</span><span class="token punctuation">,</span><span class="token number">0xA9</span><span class="token punctuation">,</span><span class="token number">0xAC</span><span class="token punctuation">]</span>str_cmp<span class="token operator">=</span><span class="token string">"H>oQn6aqLr{DH6odhdm0dMe`MBo?lRglHtGPOdobDlknejmGI|ghDb&lt;4"</span>tmp<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str_cmp<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>              <span class="token comment" spellcheck="true">#减一是因为最后一位填充数并不符合算法</span>    tmp<span class="token operator">+=</span>base64_<span class="token punctuation">[</span>fake_base64<span class="token punctuation">.</span>index<span class="token punctuation">(</span>ord<span class="token punctuation">(</span>str_cmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span>Xor<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>tmp<span class="token operator">+=</span><span class="token string">"4"</span>strflag<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>strflag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag:</p><pre class="line-numbers language-python"><code class="language-python">SangFor<span class="token punctuation">{</span>XSAYT0u5DQhaxveIR50X1U13M<span class="token operator">-</span>pZK5A0<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210917101249037.png" alt="image-20210917101249037"></p>]]></content>
      
      
      <categories>
          
          <category> 杂货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 羊城杯 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KCTF_英雄救美</title>
      <link href="/2021/09/15/KCTF_%E8%8B%B1%E9%9B%84%E6%95%91%E7%BE%8E/"/>
      <url>/2021/09/15/KCTF_%E8%8B%B1%E9%9B%84%E6%95%91%E7%BE%8E/</url>
      
        <content type="html"><![CDATA[<p>这题主要是对<code>if()</code>内的两个函数进行分析，</p><h2 id="第一个函数"><a href="#第一个函数" class="headerlink" title="第一个函数"></a><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915214157709.png" alt="image-20210915214157709">第一个函数</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">int</span> __usercall sub_321240@<span class="token operator">&lt;</span>eax<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">int</span> a1@<span class="token operator">&lt;</span>edx<span class="token operator">></span><span class="token punctuation">,</span> byte <span class="token operator">*</span>a2@<span class="token operator">&lt;</span>ecx<span class="token operator">></span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>a3<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ebx</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// esi</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// edi</span>  <span class="token keyword">char</span> v6<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// al</span>  <span class="token keyword">signed</span> <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ecx</span>  <span class="token keyword">int</span> v9<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ecx</span>  byte <span class="token operator">*</span>v10<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+0h] [ebp-64h]</span>  <span class="token keyword">int</span> v11<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+4h] [ebp-60h]</span>  __int128 arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+Ch] [ebp-58h]</span>  <span class="token keyword">char</span> v14<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+5Ch] [ebp-8h]</span>  arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>__int128<span class="token punctuation">)</span><span class="token function">_mm_load_si128</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> __m128i <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>xmmword_336280<span class="token punctuation">)</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>__int128<span class="token punctuation">)</span><span class="token function">_mm_load_si128</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> __m128i <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>xmmword_3362A0<span class="token punctuation">)</span><span class="token punctuation">;</span>  i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v11 <span class="token operator">=</span> a1<span class="token punctuation">;</span>  v10 <span class="token operator">=</span> a2<span class="token punctuation">;</span>  v14 <span class="token operator">=</span> <span class="token number">113</span><span class="token punctuation">;</span>  arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>__int128<span class="token punctuation">)</span><span class="token function">_mm_load_si128</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> __m128i <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>xmmword_336270<span class="token punctuation">)</span><span class="token punctuation">;</span>  arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>__int128<span class="token punctuation">)</span><span class="token function">_mm_load_si128</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> __m128i <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>xmmword_336290<span class="token punctuation">)</span><span class="token punctuation">;</span>  arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>__int128<span class="token punctuation">)</span><span class="token function">_mm_load_si128</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> __m128i <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>xmmword_336260<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 并不是顺序存储,动调获取结果</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> a1 <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>  m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">{</span>    v6 <span class="token operator">=</span> a2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token operator">></span> <span class="token string">'0'</span> <span class="token operator">&amp;&amp;</span> v6 <span class="token operator">&lt;=</span> <span class="token string">'9'</span> <span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    j <span class="token operator">=</span> m<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> m <span class="token operator">>=</span> <span class="token number">0x51</span> <span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> v6 <span class="token operator">!=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>arr <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">++</span>j <span class="token operator">>=</span> <span class="token number">81</span> <span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 获取下标</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    v9 <span class="token operator">=</span> j <span class="token operator">%</span> <span class="token number">9</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">// 存储范围:1~9</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v9 <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token operator">*</span>a3 <span class="token operator">=</span> v9<span class="token punctuation">;</span>                                   <span class="token comment" spellcheck="true">// 最终结果保存到a3中</span>    a2 <span class="token operator">=</span> v10<span class="token punctuation">;</span>    <span class="token operator">++</span>v3<span class="token punctuation">;</span>    <span class="token operator">++</span>a3<span class="token punctuation">;</span>    a1 <span class="token operator">=</span> v11<span class="token punctuation">;</span>LABEL_13<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">++</span>i <span class="token operator">>=</span> a1 <span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true">//说明要遍历一遍输入的值,判断是否符合条件</span>      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v3 <span class="token operator">+</span> v6 <span class="token operator">==</span> <span class="token string">'9'</span> <span class="token punctuation">)</span>                         <span class="token comment" spellcheck="true">// 每成功取一个值,下一次起点偏移+9</span>  <span class="token punctuation">{</span>    v3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    m <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>                                     <span class="token comment" spellcheck="true">// 9个为一组</span>    <span class="token keyword">goto</span> LABEL_13<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目前还不能看出究竟在做什么，</p><h2 id="第二个函数"><a href="#第二个函数" class="headerlink" title="第二个函数"></a>第二个函数</h2><p>可以知道这是一个数独</p><p>它先是将第一个函数获取的内容填充到数独表中</p><pre class="line-numbers language-C"><code class="language-C">do                                            // 插入由第一个函数获取的值  {    if ( !*(v3 - 1) )    {      v4 = *(_DWORD *)&a1[4 * v2++];      *(v3 - 1) = v4;    }    if ( !*v3 )    {      v5 = *(_DWORD *)&a1[4 * v2++];      *v3 = v5;    }    if ( !v3[1] )    {      v6 = *(_DWORD *)&a1[4 * v2++];      v3[1] = v6;    }    if ( !v3[2] )    {      v7 = *(_DWORD *)&a1[4 * v2++];      v3[2] = v7;    }    if ( !v3[3] )    {      v8 = *(_DWORD *)&a1[4 * v2++];      v3[3] = v8;    }    if ( !v3[4] )    {      v9 = *(_DWORD *)&a1[4 * v2++];      v3[4] = v9;    }    if ( !v3[5] )    {      v10 = *(_DWORD *)&a1[4 * v2++];      v3[5] = v10;    }    if ( !v3[6] )    {      v11 = *(_DWORD *)&a1[4 * v2++];      v3[6] = v11;    }    if ( !v3[7] )    {      v12 = *(_DWORD *)&a1[4 * v2++];      v3[7] = v12;    }    if ( v2 >= a2 )      break;    v3 += 9;                                    // +9说明9个数据为一行  }  while ( (int)v3 < (int)&ByteEnd );            // 结束位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后分别进行判断</p><h3 id="行判断"><a href="#行判断" class="headerlink" title="行判断"></a>行判断</h3><pre class="line-numbers language-C"><code class="language-C"> while ( 2 )                                   // 判断每一行的值是否都不相等  {    v15 = 1;    v16 = v13;    do    {      v17 = v15;      if ( v15 < 9 )      {        v18 = *v16;        while ( v18 )        {          v19 = ByteStart[v14 + v17];          if ( !v19 || v18 == v19 )             // 同一排的值不能相等            break;          if ( ++v17 >= 9 )            goto LABEL_30;        }        return 0;      }LABEL_30:      ++v15;      ++v16;    }    while ( v15 < 10 );                         // 一共81位    v14 += 9;    v13 = v41 + 9;    v41 = v13;    if ( (int)v13 < (int)&unk_338904 )      continue;    break;  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="列判断"><a href="#列判断" class="headerlink" title="列判断"></a>列判断</h3><pre class="line-numbers language-C"><code class="language-C">while ( 2 )                                   // 判断每一列的值是否都不相等  {    v21 = 1;    v42 = v20;    v22 = v20 - 9;    v23 = v20;    do    {      v24 = v21;      if ( v21 < 9 )      {        v25 = *v22;        while ( v25 && *v23 && v25 != *v23 )    // 比较        {          ++v24;          v23 += 9;          if ( v24 >= 9 )          {            v23 = v42;            goto LABEL_41;          }        }        return 0;      }LABEL_41:      ++v21;      v23 += 9;      v22 += 9;      v42 = v23;    }    while ( v21 < 10 );    v20 = v39 + 4;    v39 = (char *)v20;    if ( (int)v20 < (int)&unk_338808 )      continue;    break;  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小九宫格判断"><a href="#小九宫格判断" class="headerlink" title="小九宫格判断"></a>小九宫格判断</h3><pre class="line-numbers language-c"><code class="language-c">LABEL_45<span class="token punctuation">:</span>                                       <span class="token comment" spellcheck="true">// 这里开始到最后,判断每个小九宫格是否每个数都不一致</span>    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>LABEL_46<span class="token punctuation">:</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>v26 <span class="token operator">=</span> 0i64<span class="token punctuation">;</span>    v26<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">__OFSUB__</span><span class="token punctuation">(</span>v27<span class="token punctuation">,</span> v27 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>             <span class="token comment" spellcheck="true">// 减</span>    <span class="token punctuation">{</span>      v30 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      v31 <span class="token operator">=</span> <span class="token operator">&amp;</span>ByteStart<span class="token punctuation">[</span>j <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>      v40 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token keyword">do</span>      <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">__OFSUB__</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          v32 <span class="token operator">=</span> v31<span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 取byte[]</span>          v33 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>          <span class="token keyword">do</span>          <span class="token punctuation">{</span>            v34 <span class="token operator">=</span> <span class="token operator">*</span>v32<span class="token operator">++</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">// byte[i++]</span>            <span class="token operator">++</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v26 <span class="token operator">+</span> v34<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// v34++</span>            <span class="token operator">--</span>v33<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">while</span> <span class="token punctuation">(</span> v33 <span class="token punctuation">)</span><span class="token punctuation">;</span>          v30 <span class="token operator">=</span> v40<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        v31 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>                               <span class="token comment" spellcheck="true">// 一排一排的查看</span>        v40 <span class="token operator">=</span> <span class="token operator">--</span>v30<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span> v30 <span class="token punctuation">)</span><span class="token punctuation">;</span>      v27 <span class="token operator">=</span> v43<span class="token punctuation">;</span>      j <span class="token operator">=</span> v38<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token operator">*</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v26 <span class="token punctuation">)</span>    <span class="token punctuation">{</span>      v35 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      v36 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>v26 <span class="token operator">+</span> v36<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">)</span>      <span class="token punctuation">{</span>        <span class="token operator">++</span>v36<span class="token punctuation">;</span>        <span class="token operator">++</span>v35<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> v36 <span class="token operator">>=</span> <span class="token number">10</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span> v35 <span class="token operator">!=</span> <span class="token number">9</span> <span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span> i <span class="token operator">&lt;</span> <span class="token number">9</span> <span class="token punctuation">)</span>            <span class="token keyword">goto</span> LABEL_46<span class="token punctuation">;</span>          j <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">;</span>          v27 <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>          v43 <span class="token operator">=</span> v27<span class="token punctuation">;</span>          v38 <span class="token operator">=</span> j<span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span> j <span class="token operator">&lt;</span> <span class="token number">81</span> <span class="token punctuation">)</span>            <span class="token keyword">goto</span> LABEL_45<span class="token punctuation">;</span>          <span class="token function">free</span><span class="token punctuation">(</span>v26<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">// 当所有判断都成立后,返回1</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">free</span><span class="token punctuation">(</span>v26<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两个函数总的意思：<strong>将输入的值获取处于指定字符串中的下标，然后转换成1~9之间的数，并填充到数独表中，然后进行数独的行，列以及小九宫格的判断</strong></p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>通过网上的数独在线工具，获得内容</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915215952353.png" alt="image-20210915215952353"></p><p>然后就快乐的搓脚本</p><pre class="line-numbers language-python"><code class="language-python">arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span>   <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span>   <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span>   <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span>   <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span>   <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span>   <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span>   <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span>   <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">]</span>sudu<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>sudu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tmp<span class="token operator">=</span>len<span class="token punctuation">(</span>sudu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token number">9</span><span class="token punctuation">,</span>len<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">%</span><span class="token number">9</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">==</span>sudu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>chr<span class="token punctuation">(</span>arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">-</span>tmp<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获得flag:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">:</span>u$YBPf2pa<span class="token punctuation">]</span>Dt4<span class="token comment" spellcheck="true">#QM^H4ic'j0`w2y{d-Zzo2%/n_s@+2&lt;UW)e4AR;F.4=-qEkvC2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数独 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> KCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub_create_blog</title>
      <link href="/2021/09/15/Hexo+GitHub_create_blog/"/>
      <url>/2021/09/15/Hexo+GitHub_create_blog/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    开始学习技术的时候，就有很多师傅推荐搭建博客，但是一直没开始搭建博客（就是因为穷。后来机缘巧合之下打听到可以用<code>Hexo</code>+<code>Github</code>免费搭建博客，最后只需要出购买域名的钱，再一次有了搭建博客的想法。</p><p>把第一次搭建博客过程记录下来。</p><p><strong>以下仅为 Windows10 下搭建博客流程。</strong></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul><li><p>获取搭建博客所需要的工具</p></li><li><p>本地生成博客内容</p></li><li><p>定值个性化博客  matery主题</p></li><li><p>将博客发表到互联网上</p></li></ul><h2 id="第一部分-获取搭建博客所需要的工具"><a href="#第一部分-获取搭建博客所需要的工具" class="headerlink" title="第一部分 获取搭建博客所需要的工具"></a>第一部分 获取搭建博客所需要的工具</h2><p>搭建过程中，我们总共需要如下工具：</p><ul><li><p><strong>Git</strong></p><p>下载地址:  <a href="https://git-scm.com/download">Git下载</a></p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909201708255.png" alt="image-20210909201708255"></p><p>下载完成后，运行程序，一直确定next就行。安装完成后，鼠标右击，会发现多了两个快捷键。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909201343934.png" alt="image-20210909201343934"></p><p>在搭建过程中，我们会需要用到第二个操作。更多关于Git知识，参照<a href="https://www.jianshu.com/p/36342812cd3a">Git 使用笔记</a>。</p></li><li><p><strong>Node.js</strong></p><p>下载地址: <a href="http://nodejs.cn/download/">Node.js下载</a></p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909201900753.png" alt="image-20210909201900753"></p><p>下载完成后，运行程序，同理一直next就行。</p><p>安装完成后，可以打开<code>cmd</code>或者<code>Git Bash Here</code>，进行检测是否安装成功：</p><pre class="line-numbers language-bash"><code class="language-bash">node -v      <span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>显示版本说明安装成功。</p></li><li><p><strong>Hexo</strong></p><p>保证前面两个工具安装成功后，鼠标右击，打开<code>cmd</code>，输入如下代码用于安装<code>hexo</code>:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>中间过程可能会有报错，可以忽略。尝试能否查看版本号:</p><pre class="line-numbers language-bash"><code class="language-bash">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示版本号就说明安装成功。</p><p>我们接下来可能需要用到的相关指令:</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init  --<span class="token operator">></span>初始化bloghexo clean --<span class="token operator">></span>清楚之前生成的东西hexo g  <span class="token operator">==</span> hexo generate  --<span class="token operator">></span> 生成静态文章<span class="token punctuation">(</span>建议用缩写<span class="token punctuation">)</span>hexo d  <span class="token operator">==</span> hexo deploy    --<span class="token operator">></span> 部署文章,用于上传本地博客内容<span class="token punctuation">(</span>建议缩写<span class="token punctuation">)</span>hexo new <span class="token string">""</span>   --<span class="token operator">></span>创建blog文章hexo new page <span class="token string">""</span>  --<span class="token operator">></span>创建blog页<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>GitHub</strong></p><p>注册一个<code>GitHub</code>账号，记录用户名，账号，密码。后续可能会要求提供这些相关信息。</p></li></ul><h2 id="第二部分-本地生成博客内容"><a href="#第二部分-本地生成博客内容" class="headerlink" title="第二部分 本地生成博客内容"></a>第二部分 本地生成博客内容</h2><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><p><strong>初始化博客内容</strong></p><ul><li><p>创建一个空文档（名字任意），用于保存blog内容。</p><p>鼠标右击该文档，打开<code>Git Bash Here</code> ，初始化博客内容</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>忽视初始化过程中发出的警报。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909204704094.png" alt="image-20210909204704094"></p><p>安装必备的组件：</p><pre><code>npm install</code></pre><p>一般完成后，该目录下应该会有如下文件/文件夹</p><ul><li><code>node_modules:</code> 依赖包</li></ul><ul><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code>主题</li><li><code>_config.yml:</code> 博客的配置文件</li></ul></li></ul><p><strong>访问本地博客</strong></p><ul><li><p>使用指令:</p><pre><code>hexo ghexo s</code></pre><p>完成后，会显示一个网址:<a href="http://localhost:4000/,%E7%82%B9%E5%87%BB%E8%BF%9B%E5%8E%BB%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%87%BA%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2">http://localhost:4000/,点击进去，就会出现一个本地博客</a></p></li></ul><h3 id="脚本Front-matter-上传"><a href="#脚本Front-matter-上传" class="headerlink" title="脚本Front-matter+上传"></a>脚本Front-matter+上传</h3><p>文章均保存在主目录<code>source/_posts</code>中，默认为<code>md</code>文件，并且文件前面需要添加<code>Front-matter </code>信息，有关信息如下:</p><ul><li><code>title</code>:<code>Markdown</code>的文件标题</li><li><code>date</code>:文件创建日期时间，同时也作为发布时间</li><li><code>author</code>:作者</li><li><code>img</code>:文章特征图,如果没有设置，则会根据文章标题的 <code>hashcode</code> 的值取余，选取对应的特色照片</li><li><code>top</code>:是否置顶</li><li><code>cover</code>:是否需要加入到首页轮播封面中</li><li><code>coverlmg</code>:首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</li><li><code>password</code>:如果需要阅读相应文章，必须输入密码，此处输入值为实际密码的<code>sha256</code>小写形式。需保证主题目录<code>_config,yml</code>激活了该功能</li><li><code>toc</code>:是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题目录 <code>config.yml</code> 中激活了 <code>toc</code> 选项</li><li><code>mathjax</code>:是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题目录<code>_config.yml</code>中激活相应选修，且安装了相关插件</li><li> <code>summary</code>：文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</li><li><code>categories</code>:文章分类，本主题的分类表示宏观上大的分类</li><li><code>tags</code>:文章标签，一篇文章可以多个标签</li></ul><p>以上为可以添加的<code>Front-matter </code>。根据需求进行添加，下面为自动化上传脚本，可以根据需求进行添加:</p><blockquote><p>该脚本需要保证相关指令所需插件安装完成</p><p>该脚本如果只需要在本地演示，则将其中<code>hexo d</code>换成<code>hexo s</code></p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> hashlib<span class="token comment" spellcheck="true">#===以下为需要修改的内容===</span>author<span class="token operator">=</span><span class="token string">"Myu_"</span>                                       <span class="token comment" spellcheck="true">#博客名</span>blog_address<span class="token operator">=</span><span class="token string">"E:\\make_blog\\blog"</span>                  <span class="token comment" spellcheck="true">#本地博客根目录</span>banner<span class="token operator">=</span><span class="token string">"/medias/banner/"</span>                            <span class="token comment" spellcheck="true">#图片保存位置</span>File_come<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"F:\\Typora\\Blog\\"</span><span class="token punctuation">]</span>                    <span class="token comment" spellcheck="true">#遍历文件范围,根据需求添加或修改</span>File_type<span class="token operator">=</span><span class="token string">".md"</span>                                     <span class="token comment" spellcheck="true">#默认为md文件,可以根据自己需求修改</span><span class="token comment" spellcheck="true">#===以上为需要修改的内容===</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;==以下不输入均代表否定==>"</span><span class="token punctuation">)</span>content<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>address<span class="token operator">=</span>blog_address<span class="token operator">+</span><span class="token string">"\\source\\_posts\\"</span><span class="token operator">+</span>input<span class="token punctuation">(</span><span class="token string">"文件名:"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">".md"</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"---"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标题</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"title: "</span><span class="token operator">+</span>input<span class="token punctuation">(</span><span class="token string">"标题:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#日期</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"date: "</span><span class="token operator">+</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#作者</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"author: "</span><span class="token operator">+</span>author<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#图片  默认不开启,会根据相关条件自定义图片</span><span class="token comment" spellcheck="true"># content.append("img: "+banner+input("图片数字:")+".jpg")</span><span class="token comment" spellcheck="true"># content.append("coverlmg: "+banner+input("封面图片数字:")+".jpg")</span><span class="token comment" spellcheck="true">#置顶</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"是否需要置顶:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"top: false"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"top: true"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#首页轮播</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"是否需要加入到首页轮播封面中:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"cover: false"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"cover: true"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#密码</span>tmp<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"密码:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token operator">==</span>b<span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"password: "</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"password: "</span><span class="token operator">+</span>hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#主题</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"summary: "</span><span class="token operator">+</span>input<span class="token punctuation">(</span><span class="token string">"主题:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"tags:"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标签</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    tmp<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"第%d个标签名:"</span><span class="token operator">%</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    count<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"- "</span><span class="token operator">+</span>tmp<span class="token punctuation">)</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"categories:"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#分类</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    tmp<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"第%d个分类:"</span><span class="token operator">%</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    count<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"- "</span><span class="token operator">+</span>tmp<span class="token punctuation">)</span>content<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"---"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#文档地址</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>bytes<span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你需要写入的文档名(请确保该文件名在指定文件范围内唯一):"</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">File_name_walk</span><span class="token punctuation">(</span>File_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> File_walk <span class="token keyword">in</span> File_come<span class="token punctuation">:</span>        <span class="token keyword">for</span> root<span class="token punctuation">,</span>dirs<span class="token punctuation">,</span>files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>File_walk<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>file<span class="token operator">==</span>File_name<span class="token operator">+</span>File_type<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"查找成功,正在创建本地文件..."</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> root<span class="token operator">+</span>file            <span class="token keyword">if</span><span class="token punctuation">(</span>dirs<span class="token operator">!=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                File_name_walk<span class="token punctuation">(</span>dirs<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在指定文件搜索范围内,并没有找到相关文件,请重新输入:"</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    File_name<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始查找..."</span><span class="token punctuation">)</span>    tmp<span class="token operator">=</span>File_name_walk<span class="token punctuation">(</span>File_name<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        fp<span class="token operator">=</span>open<span class="token punctuation">(</span>tmp<span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span>        line<span class="token operator">=</span>fp<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> line<span class="token punctuation">:</span>            content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span>            line<span class="token operator">=</span>fp<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>        fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token keyword">with</span> open<span class="token punctuation">(</span>address<span class="token punctuation">,</span><span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"本地文件创建成功！"</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token punctuation">(</span>blog_address<span class="token punctuation">)</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"hexo g"</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"hexo d"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"上传blog成功！"</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>仅作为最初版本，后续不断完善。</p><h2 id="第三部分-定制个性化博客-matery主题"><a href="#第三部分-定制个性化博客-matery主题" class="headerlink" title="第三部分 定制个性化博客  matery主题"></a>第三部分 定制个性化博客  matery主题</h2><p>通过第二部分获得的本地博客，可以用了，但是观赏性极差，还没有逼格。这肯定不行，必须来一手个性化。</p><p>这里仅提供<code>matery</code>主题的部分配置。</p><p>将主目录<code>_config.yml</code>内<code>language</code>修改一下，变成如下内容，就可以让博客内容主动显示成中文:</p><pre class="line-numbers language-bash"><code class="language-bash">language: zh-CN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909222725455.png" alt="image-20210909222725455"></p><h3 id="1-主题修改"><a href="#1-主题修改" class="headerlink" title="1.主题修改"></a>1.主题修改</h3><p>首先下载<code>matery</code>主题包:<a href="https://github.com/blinkfox/hexo-theme-matery">传送门</a></p><p>然后将主题包放到你存放博客文件的<code>themes</code>文件夹下，然后打开主目录下的<code>_config.yml</code>,将其中默认主题名字修改一下：</p><pre class="line-numbers language-bash"><code class="language-bash">theme: landscap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改后如下:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909212104544.png" alt="image-20210909212104544"></p><p>保存后，查看本地博客，就会发现变成了相关主题，但是上面一排都没有设置页，导致不能访问。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/YKwFax1NrtVL6Zo.jpg" alt="hexo-theme-1.jpg"></p><h3 id="2-添加界面"><a href="#2-添加界面" class="headerlink" title="2.添加界面"></a>2.添加界面</h3><h4 id="2-1添加404界面"><a href="#2-1添加404界面" class="headerlink" title="2.1添加404界面"></a>2.1添加404界面</h4><p>这个主题默认没有一个404界面，我们可以人为添加一个。可以在主目录<code>/source/</code>下创建一个<code>404.md</code>，或者通过如下指令创建<code>404.md</code>:</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"404"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>并在其中添加内容(所有都要添加):</p><pre class="line-numbers language-bash"><code class="language-bash">---title: 404date: 2021-09-09 21:34:12type: <span class="token string">"404"</span>layout: <span class="token string">"404"</span>description: <span class="token string">"3mm～，你没有猜错，这是一个懒人，还没完善这里，QAQ :("</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在<code>/themes/matery/layout/</code>目录下新建一个<code>404.ejs</code>文件，内容如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>    /* don<span class="token string">'t remove. */    .about-cover {        height: 75vh;    }&lt;/style>&lt;div class="bg-cover pd-header about-cover">    &lt;div class="container">        &lt;div class="row">            &lt;div class="col s10 offset-s1 m8 offset-m2 l8 offset-l2">                &lt;div class="brand">                    &lt;div class="title center-align">                        404                    &lt;/div>                    &lt;div class="description center-align">                        &lt;%= page.description %>                    &lt;/div>                &lt;/div>            &lt;/div>        &lt;/div>    &lt;/div>&lt;/div>&lt;script>    // 每天切换 banner 图.  Switch banner image every day.    $('</span>.bg-cover<span class="token string">').css('</span>background-image<span class="token string">', '</span>url<span class="token punctuation">(</span>/medias/banner/<span class="token string">' + new Date().getDay() + '</span>.jpg<span class="token punctuation">)</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2新建标签-tags-页"><a href="#2-2新建标签-tags-页" class="headerlink" title="2.2新建标签 tags 页"></a>2.2新建标签 tags 页</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建出来的<code>/source/tags/index.md</code>，写入如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">---title: tagsdate: 2021-09-09 21:34:12type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3新建分类-categories-页"><a href="#2-3新建分类-categories-页" class="headerlink" title="2.3新建分类 categories 页"></a>2.3新建分类 categories 页</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建出来的<code>/source/categories/index.md</code>，写入如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">---title: categoriesdate: 2021-09-09 21:34:12type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4新建关于我-about-页"><a href="#2-4新建关于我-about-页" class="headerlink" title="2.4新建关于我 about 页"></a>2.4新建关于我 about 页</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建出来的<code>/source/about/index.md</code>，写入如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">---title: aboutdate: 2021-09-09 21:34:12type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在主题目录<code>_config.yml</code>下找到:</p><pre class="line-numbers language-bash"><code class="language-bash">profile:  avatar: /medias/avatar.jpg  career: Software Engineer  introduction: If you wish to succeed, you should use persistence as your good friend, experience as your reference, prudence as your brother and hope as your sentry.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上为默认信息，可以根据自己需要修改内容</p><blockquote><p>图片地址<img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210910125915088.png" alt="image-20210910125915088"></p></blockquote><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210910125449822.png" alt="image-20210910125449822"></p><p>我的项目，我的技能，相册等设置就在<code>profile</code>后面，根据注释自行选择</p><h4 id="2-5新建友情连接-friends-页"><a href="#2-5新建友情连接-friends-页" class="headerlink" title="2.5新建友情连接 friends 页"></a>2.5新建友情连接 friends 页</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建出来的<code>/source/friends/index.md</code>，写入如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">---title: friendsdate: 2021-09-09 21:34:12type: <span class="token string">"friends"</span>layout: <span class="token string">"friends"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，剩下部分还是需要我们自己补齐，毕竟不像前几个页面，你只需要创建一个链接，这里我们需要提供剩下内容,示例:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"avatar"</span><span class="token keyword">:</span> <span class="token string">"https://myu-data.oss-cn-chengdu.aliyuncs.com/img/QQ%E5%9B%BE%E7%89%8720210706183646.jpg"</span>,        <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"Myu_"</span>,        <span class="token string">"introduction"</span><span class="token keyword">:</span> <span class="token string">"这是一个懒虫"</span>,        <span class="token string">"url"</span><span class="token keyword">:</span> <span class="token string">"http://myu-blog.top/"</span>,        <span class="token string">"title"</span><span class="token keyword">:</span> <span class="token string">"路过"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909230125110.png" alt="image-20210909230125110"></p><h3 id="3-代码高亮"><a href="#3-代码高亮" class="headerlink" title="3.代码高亮"></a>3.代码高亮</h3><p><code>matery</code>主题的代码高亮不是很理想，下载一个用于代码美化的插件:<code>hexo-prism-plugin</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将主目录下<code>_config.yml</code>内相关代码高显关闭</p><pre class="line-numbers language-python"><code class="language-python">highlight<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true">#代码块的设置</span>  enable<span class="token punctuation">:</span> false            <span class="token comment" spellcheck="true">#开启代码块高亮</span>  line_number<span class="token punctuation">:</span> true        <span class="token comment" spellcheck="true">#如果未指定语言，则启用自动检测</span>  auto_detect<span class="token punctuation">:</span> false        <span class="token comment" spellcheck="true">#显示行数</span>  tab_replace<span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token comment" spellcheck="true">#用n个空格替换tabs；如果值为空，则不会替换tabs</span>  wrap<span class="token punctuation">:</span> ture  hljs<span class="token punctuation">:</span> false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在末尾添加我们自己的代码:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 关闭原有的代码高亮，使用自己的</span>prism_plugin<span class="token punctuation">:</span>  mode<span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme<span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  line_number<span class="token punctuation">:</span> false    <span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-增加建站时间"><a href="#4-增加建站时间" class="headerlink" title="4.增加建站时间"></a>4.增加建站时间</h3><p>修改主目录<code>/themes/matery/layout/_partial</code>中的<code>footer.ejs</code>，末尾加上：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token operator">&lt;</span>script language<span class="token operator">=</span>javascript<span class="token operator">></span>    function <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        var minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        var hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        var days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>        var years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>        var today <span class="token operator">=</span> new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        var todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">09</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*更具需要修改*/</span>        var t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>        var diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>        var diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>        var diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>        var diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>        var diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"本站已运行 "</span> <span class="token operator">+</span>diffYears<span class="token operator">+</span><span class="token string">" 年 "</span><span class="token operator">+</span>diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分钟 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大致效果:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909221627276.png" alt="image-20210909221627276"></p><h3 id="5-添加动漫人物"><a href="#5-添加动漫人物" class="headerlink" title="5.添加动漫人物"></a>5.添加动漫人物</h3><p>输入两次指令+添加一次代码即可实现:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-shizuku<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>可以根据自己需求进行修改(<a href="https://github.com/xiazeyu/live2d-widget-models">原作者地址</a></p></blockquote><p>然后在主目录<code>_config.yml</code>末尾添加内容:</p><pre class="line-numbers language-bash"><code class="language-bash">live2d:    enable: <span class="token boolean">true</span>    scriptFrom: local    pluginRootPath: live2dw/    pluginJsPath: lib/    pluginModelPath: assets/    tagMode: <span class="token boolean">false</span>    log: <span class="token boolean">false</span>    model:        use: live2d-widget-model-shizuku    display:        position: right        width: 150        height: 300    mobile:        show: <span class="token boolean">false</span>    react:        opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果图:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909222312534.png" alt="image-20210909222312534"></p><p>这样弄出来的动漫人物并没有语言等功能，但是相比较来说，更简单实现。</p><h3 id="6-添加blog动态标签"><a href="#6-添加blog动态标签" class="headerlink" title="6.添加blog动态标签"></a>6.添加blog动态标签</h3><p>所谓动态标签，如下:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210909230659955.png" alt="image-20210909230659955"></p><p>打开<code>themes/matery/layout/layout.ejs</code>，在末尾添加如下代码:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    var OriginTitile <span class="token operator">=</span> document.title,        st<span class="token punctuation">;</span>    document.addEventListener<span class="token punctuation">(</span><span class="token string">"visibilitychange"</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document.hidden ? <span class="token punctuation">(</span>document.title <span class="token operator">=</span> <span class="token string">"看不见我🙈~看不见我🙈~"</span>, clearTimeout<span class="token punctuation">(</span>st<span class="token punctuation">))</span> <span class="token keyword">:</span> <span class="token punctuation">(</span>document.title <span class="token operator">=</span>            <span class="token string">"(๑•̀ㅂ•́) ✧被发现了～"</span>, st <span class="token operator">=</span> setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                document.title <span class="token operator">=</span> OriginTitile            <span class="token punctuation">}</span>, 3e3<span class="token punctuation">))</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据需求需改即可，然后在<code>Git Bash Here  </code>中</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-添加搜索功能"><a href="#7-添加搜索功能" class="headerlink" title="7.添加搜索功能"></a>7.添加搜索功能</h3><p>使用一个名为<code>hexo-generator-search</code>的<code>Hexo</code>插件来实现内容搜索，安装:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在主目录<code>_config.yml</code>末尾添加如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="8-鼠标拖尾-—彩虹星星掉落跟随"><a href="#8-鼠标拖尾-—彩虹星星掉落跟随" class="headerlink" title="8.鼠标拖尾 —彩虹星星掉落跟随"></a>8.鼠标拖尾 —彩虹星星掉落跟随</h3><blockquote><p>由于主题自带点击爱心标志，感觉还行，就没有再去修改其他类型。</p></blockquote><p>在<code>themes/matery/source/js</code>目录下新建<code>cursor.js</code>文件，复制粘贴<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/cursor.js">传送门</a>里的所有内容</p><p>然后在<code>themes/matery/layout/layout.ejs</code>末尾添加:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/cursor.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9-自定义鼠标样式"><a href="#9-自定义鼠标样式" class="headerlink" title="9.自定义鼠标样式"></a>9.自定义鼠标样式</h3><p>获取一个鼠标样式，放在主题文件夹内的任意位置</p><blockquote><p>推荐<code>matery/source/medias</code></p></blockquote><p>以我的为例，我的鼠标样式存放在<code>matery/source/medias</code>下，打开主题目录<code>/source/css/my.css</code>，添加如下内容:</p><pre class="line-numbers language-bash"><code class="language-bash">*<span class="token punctuation">{</span>    cursor: url<span class="token punctuation">(</span><span class="token string">"/medias/shubiao.cur"</span><span class="token punctuation">)</span>,auto<span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">}</span>:active<span class="token punctuation">{</span>    cursor: url<span class="token punctuation">(</span><span class="token string">"/medias/shubiao.cur"</span><span class="token punctuation">)</span>,auto<span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个为正常显示的鼠标样式，第二个为点击鼠标左键后显示的样式</p><blockquote><p>补:过于花里胡哨的样式可能会对后续查看blog有一定的影响</p></blockquote><h3 id="10-添加二级标签"><a href="#10-添加二级标签" class="headerlink" title="10.添加二级标签"></a>10.添加二级标签</h3><p>所谓二级标签，是指这种：</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210910142019900.png" alt="image-20210910142019900"></p><p>我们总共需要配置四个文件内容:</p><ul><li><p><code>/themes/matery/layout/_partial/mobile-nav.ejs</code></p><p>将如下内容:</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>githubLink <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divider"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.githubLink.url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-github-square fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>替换成:</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性  <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-nav-item"</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-chevron-right"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                <span class="token operator">&lt;</span>ul<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> childrenLink <span class="token keyword">of</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>li<span class="token operator">></span>                       <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for(childrenLink.url)%>"</span> <span class="token operator">></span>                           <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLink<span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> childrenLink<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- childrenLink.icon %>"</span> style<span class="token operator">=</span><span class="token string">"left: 25px; position: absolute;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                       <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                       <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> childrenLink<span class="token punctuation">.</span>name <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>githubLink <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divider"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.githubLink.url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-github-square fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>/themes/matery/layout/_partial/navagtion.ejs</code></p><p>将如下内容:</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#searchModal"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal-trigger waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"searchIcon"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-search"</span> title<span class="token operator">=</span><span class="token string">"&lt;%= __('search') %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>替换成:</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性  <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right nav-menu"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>      <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down nav-item"</span> <span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>              <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>              <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-chevron-down"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sub-nav menus_item_child "</span><span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> childrenLink <span class="token keyword">of</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>li<span class="token operator">></span>                   <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for(childrenLink.url)%>"</span> <span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLink<span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> childrenLink<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- childrenLink.icon %>"</span> style<span class="token operator">=</span><span class="token string">"margin-top: -20px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> childrenLink<span class="token punctuation">.</span>name <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#searchModal"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal-trigger waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"searchIcon"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-search"</span> title<span class="token operator">=</span><span class="token string">"&lt;%= __('search') %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>/themes/matery/source/css/matery.css</code></p><p>末尾添加内容:</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 二级菜单样式定义  */</span><span class="token selector"><span class="token class">.nav-menu</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">77</span>px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li </span><span class="token punctuation">{</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">140</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li a </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">138</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-show</span> i<span class="token attribute">[aria-hidden=true]</span> </span><span class="token punctuation">{</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.menus_item_child</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> fit-content<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.98</span><span class="token punctuation">;</span>    <span class="token property">-ms-filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-moz-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-o-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-ms-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.menus_item_child</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* position: relative; */</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">45</span>px<span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> ul </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> ul li </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">245</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-nav-item</span>>a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span>>a<span class="token pseudo-element">:before</span>,<span class="token class">.m-nav-item</span>>a<span class="token pseudo-class">:hover</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">65</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-item</span> li<span class="token pseudo-class">:hover</span> a </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>/themes/matery/source/js/matery.js</code></p><p>再最后一个<code>});</code>之前添加:</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 增加二级菜单功能 </span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".nav-menu>li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.nav-item.nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item>a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item.m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>然后打开主题目录<code>_config.yml</code>，进行下列样式修改:</p><pre class="line-numbers language-python"><code class="language-python">Medias<span class="token punctuation">:</span>   icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>list   children<span class="token punctuation">:</span>     <span class="token operator">-</span> name<span class="token punctuation">:</span> Musics       url<span class="token punctuation">:</span> <span class="token operator">/</span>musics       icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>music     <span class="token operator">-</span> name<span class="token punctuation">:</span> Movies       url<span class="token punctuation">:</span> <span class="token operator">/</span>movies       icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>film     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-添加文章字数统计"><a href="#11-添加文章字数统计" class="headerlink" title="11.添加文章字数统计"></a>11.添加文章字数统计</h3><p>安装<code>hexo-wordcount</code>插件</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主题目录<code>_config.yml</code>，找到如下信息</p><pre class="line-numbers language-python"><code class="language-python">wordCount<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> false  <span class="token comment" spellcheck="true">#将这个值设置为 true </span>  postWordCount<span class="token punctuation">:</span> true  min2read<span class="token punctuation">:</span> true  totalCount<span class="token punctuation">:</span> true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-修改主题颜色"><a href="#12-修改主题颜色" class="headerlink" title="12.修改主题颜色"></a>12.修改主题颜色</h3><p>以下修改均在主题目录<code>/source/css/matery.css</code>中:</p><ul><li><p>修改横幅颜色:</p><p>搜索:<code>.bg-color</code>,找到后，根据自己喜好进行修改(下为个人配置)</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#3230bf</span> <span class="token number">0%</span>, <span class="token hexcode">#9d0f7a</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/*修改颜色*/</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*透明效果*/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>去除动态背景颜色:</p><p>我感觉挺烦的，看着不舒服，会选择将它去掉</p><p>搜索:<code>@-webkit-keyframes rainbow</code>以及<code>@keyframes rainbow</code>，分别将它们内容注释掉</p><pre class="line-numbers language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="13-设置背景图-网站favicon-网站LOGO"><a href="#13-设置背景图-网站favicon-网站LOGO" class="headerlink" title="13.设置背景图+网站favicon+网站LOGO"></a>13.设置背景图+网站favicon+网站LOGO</h3><p>可以将自己的照片替换主题目录<code>/source</code>及其<code>/source/medias</code>下的相关图片</p><p>也可以在主题目录<code>_config.yml</code>中进行搜索，进行修改:</p><ul><li>网站背景图:<code>background</code></li><li>网站favicon:<code>favicon</code></li><li>网站LOGO:<code>logo</code></li></ul><p>推荐将自己图片替换目录下的相关图片。</p><p>个性化设置到此结束。有些个性化，比如<strong>视频，音乐，评论，mathjax等</strong>，都没有配置，需要自行出门左转问度娘。</p><h2 id="第四部分-将博客发表到互联网上"><a href="#第四部分-将博客发表到互联网上" class="headerlink" title="第四部分  将博客发表到互联网上"></a>第四部分  将博客发表到互联网上</h2><p>发到互联网上，这就需要之前一直没有提到的<code>GitHub</code>了</p><blockquote><p>有很多种方法实现博客发表到互联网上，这里仅讲<code>GitHub</code></p></blockquote><h3 id="创建一个GitHub仓库"><a href="#创建一个GitHub仓库" class="headerlink" title="创建一个GitHub仓库"></a>创建一个GitHub仓库</h3><p>首先，拥有一个<a href="https://github.com/">GitHub</a>账号，新建一个仓库</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915095131613.png" alt="image-20210915095131613"></p><p>然后进行设置:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915095542322.png" alt="image-20210915095542322"></p><blockquote><p>列如==&gt;例如</p></blockquote><h3 id="生成SSH，添加到GitHub"><a href="#生成SSH，添加到GitHub" class="headerlink" title="生成SSH，添加到GitHub"></a>生成SSH，添加到GitHub</h3><p><code>Git Bah</code>中，<code>yourname</code>与<code>youremail</code>分别对应你的<code>GitHub</code>账号的名字与邮箱</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"Re0Hy"</span><span class="token function">git</span> config --global user.email <span class="token string">"2218205894@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输入完成后，可以通过以下指令查看输入是否有误</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后进行SSH的创建</p><blockquote><p>什么是SSH？</p><p>实际上就是创建一个公钥与私钥，将公钥放在GitHub上，这样，当你链接GitHub时，根据公钥匹配私钥，进而能够顺利的上传文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建成功后，可以在<code>C:\Users\ASUS</code>找到一个<code>.ssh</code>的文件夹，获取<code>id_rsa.pub</code>中的内容，等会要用。</p><p>如果不想打开文件夹，可以通过指令实现获取:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在<code>GitHub</code>名字下的<code>settings</code>，点击<code>SSH and GPG keys</code>，选择<code>New SSH key</code>,名字任取，将复制的内容原封不动的复制到<code>Key</code>框内。</p><p>在<code>Git Bash</code>中，检测是否成功，指令如下</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915102740240.png" alt="image-20210915102740240"></p><p>只要出现这句话就行，后面<code>but</code>内容不必关心。</p><h3 id="将hexo部署到GitHub上"><a href="#将hexo部署到GitHub上" class="headerlink" title="将hexo部署到GitHub上"></a>将hexo部署到GitHub上</h3><p>打开主目录<code>_config.yml</code>,找到<code>deploy</code>,设置可以参考如下</p><pre class="line-numbers language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: https://github.com/Re0Hy/Re0Hy.github.io  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>下载相关插件，来实现上传功能</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就可以进行上传文件了</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>每次上传前，需要<code>hexo g</code>生成静态文章，然后才能<code>hexo d</code>进行上传，否则博客上的内容不会进行改变</p></blockquote><p>可能需要等待一会，才能在<code>http://yourname.github.io/</code>看到相关内容</p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>可以设置可以不设置，看个人。推荐设置一个，毕竟一两杯奶茶钱，有几年域名使用权。</p><blockquote><p>个人博客在没有设置域名之前，有时候不能在<code>Google</code>正常的显示，一直找不到错误，但是在火狐上能正常且完整的显示内容，当设置完域名后，就没有出现过这类问题，有点疑惑。</p></blockquote><p>以<a href="https://cloud.tencent.com/act/domainsales?fromSource=gwzcw.2046521.2046521.2046521&amp;utm_medium=cpc&amp;utm_id=gwzcw.2046521.2046521.2046521&amp;bd_vid=10472616460672813267">腾讯云</a>为例，登录后，点击控制台</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915110103915.png" alt="image-20210915110103915"></p><p>搜索：<code>域名注册</code>，点击<code>注册域名</code>，根据个人喜好和资金选择后缀名，购买成功后，就可以在<code>我的域名</code>中就可以看到我们刚才买到的域名了，进行实名认证，然后在操作下方，点击<code>解析</code>，选择添加记录，总共需要添加两个内容:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915110805005.png" alt="image-20210915110805005"></p><p><strong>主机记录分别为<code>@</code>与<code>www</code>,记录类型为<code>CNAME</code>,记录值为你的<code>GitHub</code>仓库名字</strong></p><p>然后在你的<code>GitHub</code>仓库设置中，设置<code>Custom domain</code>内容:</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915111600138.png" alt="image-20210915111600138"></p><p>保存后，在主目录<code>/source</code>下，应该会有一个名为<code>CNAME</code>文件,如果没有，自己创建一个，并且写入你的域名名字，保存即可。过段时间后，就可以通过域名访问你的个人博客了。</p><h2 id="第五部分-优化"><a href="#第五部分-优化" class="headerlink" title="第五部分 优化"></a>第五部分 优化</h2><blockquote><p>这部分需要有域名</p></blockquote><h3 id="百度收录站点"><a href="#百度收录站点" class="headerlink" title="百度收录站点"></a>百度收录站点</h3><h4 id="提交网站"><a href="#提交网站" class="headerlink" title="提交网站"></a>提交网站</h4><p>虽然我们已近将博客发表到互联网上面了，但是并不会主动向别人推送我们博客内容（这可不行，这么好的装B，呸，分享技术的好机会，怎么能放弃。</p><p>所以我们需要向百度提供我们的网址，先搜索<code>site:</code>+<code>你的域名</code>,点击<code>提交网址</code></p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915114222701.png" alt="image-20210915114222701"></p><p>选择提交网址，登录账号后，<code>用户中心</code>，选择<code>站点管理</code></p><p>第三步这里，共三种验证，这里我选择的是<code>CNAME验证</code>，相对来说更简单，毕竟我们前面设置了<code>CNAME</code>，将它提供的信息，在腾讯云里面添加一条解析就好了。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915151647474.png" alt="image-20210915151647474"></p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915115438986.png" alt="image-20210915115438986"></p><blockquote><p>这里不一样，因为两者的域名不一样，知道输入的值的由来就行</p><p><strong>如果是另外两种，那一定要注意，使用文件验证文件存放的位置需要放在<code>sourc</code>文件夹下，如果是<code>html</code>文件那么<code>hexo</code>就会将其编译，所以必须要在<code>html</code>头部加上的<code>layout:false</code>，这样就不会被<code>hexo</code>编译。（如果验证文件是<code>txt</code>格式的就不需要）</strong></p></blockquote><p>点击验证，完成。</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915113928184.png" alt="image-20210915113928184"></p><h4 id="构建网站地图"><a href="#构建网站地图" class="headerlink" title="构建网站地图"></a>构建网站地图</h4><blockquote><p>为什么要构建网站地图呢？</p><p>实际上就是为了便于搜索引擎爬虫获取你blog的内容，提高访问量</p></blockquote><p>利用<code>npm</code>自动生成网站的<code>sitemap</code>,然后将<code>sitemap</code>交给百度就行。</p><p>安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save     <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后往主目录<code>_config.yml</code>里面添加一点内容:</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># URL</span><span class="token comment" spellcheck="true">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span><span class="token comment" spellcheck="true"># url: https://Re0Hy.github.io</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//myu<span class="token punctuation">-</span>blog.top<span class="token key atrule">root</span><span class="token punctuation">:</span> /<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month/<span class="token punctuation">:</span>day/<span class="token punctuation">:</span>title/<span class="token key atrule">permalink_defaults</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把<code>url</code>改成自己的博客域名就行。</p><p>然后<code>hexo g</code>,运行完成后，查看主目录<code>/public</code>内是否存在<code>baidusitemap.xml</code>与<code>sitemap.xml</code>，存在说明安装成功。</p><h4 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h4><p>将生成的<code>sitemap.xml</code>交给百度，目前有三种提交方式</p><p><code>API提交</code>，<code>sitemap</code>,<code>手动提交</code></p><blockquote><p>效率:API提交&gt;sitemap&gt;手动提交</p></blockquote><p>我这里选择<code>API提交</code>，下载<code>hexo-baidu-url-submit</code>插件，这样当我们上传博客文章的时候，自动推送。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-baidu-url-submit --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在主目录<code>_config.yml</code>中，添加:</p><pre class="line-numbers language-bash"><code class="language-bash">baidu_url_submit:  count: 80                 <span class="token comment" spellcheck="true"># 提交最新的链接个数</span>  host: www.myu-blog.top     <span class="token comment" spellcheck="true"># 在百度站长平台中注册的域名</span>  token: ***********         <span class="token comment" spellcheck="true"># 这里是密钥,所以不要在GitHub中放博客源代码</span>  path: baidu_urls.txt      <span class="token comment" spellcheck="true"># 文本文档的地址， 新链接会保存在此文本文档里</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中秘钥由来：<img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915161634279.png" alt="image-20210915161634279"></p><p>然后在主目录<code>_config.yml</code>中<code>deploy</code>下面添加内容（以我的为例:</p><pre class="line-numbers language-bash"><code class="language-bash">deploy:- type: <span class="token function">git</span>                      <span class="token comment" spellcheck="true">#在原来的基础上前面加了— </span>  repository: https://github.com/Re0Hy/Re0Hy.github.io  branch: main- type: baidu_url_submitter      <span class="token comment" spellcheck="true">#添加的内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进行<code>hexo g</code>+<code>hexo d</code>，一定要先进行<code>hexo g</code>，否则会报错，成功效果图：</p><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210915161303155.png" alt="image-20210915161303155"></p><blockquote><p>这里一大堆是因为我的网址里面有中文字符</p></blockquote><p>其他两种可以百度寻方法。</p><p>至此，就成功的让百度收录站点，实际生效可能还是需要等一段时间，有点慢。</p><h3 id="Google收录站点"><a href="#Google收录站点" class="headerlink" title="Google收录站点"></a>Google收录站点</h3><p>大致操作和百度收录站点差不多，首先登录<a href="https://www.google.com/webmasters/">Google站点平台</a></p><p>后续补充….</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KCTF_北冥神功</title>
      <link href="/2021/09/11/KCTF_%E5%8C%97%E5%86%A5%E7%A5%9E%E5%8A%9F/"/>
      <url>/2021/09/11/KCTF_%E5%8C%97%E5%86%A5%E7%A5%9E%E5%8A%9F/</url>
      
        <content type="html"><![CDATA[<p>一道迷宫题，核心内容:</p><pre class="line-numbers language-C"><code class="language-C">LABEL_11:          v7 = (v4 + v5 / 6) % 6;               // v5为下标          v8 = v5 + v4;          count = v22;                          // 初始为0          v20 = v7;          v10 = 5 - v8 % 6;                     // 5-(v5+v4)%6          for ( i = 0; ; i = 1 )                // 奇偶交替          {            switch ( v10 )            {              case 1:                ++count;                break;              case 2:                v17 = (I++ & 1) == 0;           // 偶数1,奇数0                count += v17;                break;              case 3:                v12 = (I++ & 1) != 0;           // 偶数0,奇数1                count -= v12;                break;              case 4:                --count;                break;              case 5:                v19 = (I-- & 1) != 0;                count -= v19;                break;              default:                v18 = (I-- & 1) == 0;                count += v18;                break;            }            if ( count > 9 )              break;            if ( I > 8 )              break;            v13 = &aS_1[10 * I + count];            if ( *v13 )              break;            *v13 = 1;            if ( i == 1 )            {              ++v4;              v22 = count;              v3 = v25[v4];              if ( v3 )                goto LABEL_4;              goto LABEL_19;            }            v10 = v20;          }        }        else        {          while ( v24 != ++v5 )          {            if ( byte_4B7040[v5] == v3 )              goto LABEL_11;          }        }      }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210911155935245.png" alt="image-20210911155935245"></p><p>确定迷宫样子:10*9,并且会将走过的0转换成1:</p><pre class="line-numbers language-python"><code class="language-python">S <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://myu-data.oss-cn-chengdu.aliyuncs.com/img/image-20210911155616914.png" alt="image-20210911155616914"></p><p>要打印<code>Good job!</code>，就需要迷宫中没有0，再看迷宫走法:</p><pre class="line-numbers language-C"><code class="language-C">         for ( i = 0; ; i = 1 )                // 奇偶交替          {            switch ( v10 )            {              case 1:                ++count;                break;              case 2:                v17 = (I++ & 1) == 0;           // 偶数1,奇数0                count += v17;                break;              case 3:                v12 = (I++ & 1) != 0;           // 偶数0,奇数1                count -= v12;                break;              case 4:                --count;                break;              case 5:                v19 = (I-- & 1) != 0;                count -= v19;                break;              default:                v18 = (I-- & 1) == 0;                count += v18;                break;            }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很奇妙，刚开始看这里有点蒙，但是结合后面代码，确定个个数字之间代表的含义:</p><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>0</th></tr></thead><tbody><tr><td>奇数</td><td>右→</td><td>下↓</td><td>左下↙</td><td>左←</td><td>左上↖</td><td>上↑</td></tr><tr><td>偶数</td><td>右→</td><td>右下↘</td><td>下↓</td><td>左←</td><td>上↑</td><td>右上↗</td></tr></tbody></table><p>获得走法:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>逆推输入的值，很容易发现，两两一对，其中奇数位会影响到偶数位，而奇数位只受自己影响，可以根据这个条件，写解题脚本</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span>str_arr<span class="token operator">=</span><span class="token string">"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>odd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>even<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token punctuation">[</span>BitVec<span class="token punctuation">(</span><span class="token string">"%d"</span> <span class="token operator">%</span>i<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>odd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>s<span class="token operator">=</span>Solver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>odd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">-</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">6</span><span class="token operator">==</span>odd<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">+</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">6</span><span class="token operator">==</span>even<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">,</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>len<span class="token punctuation">(</span>str_arr<span class="token punctuation">)</span><span class="token punctuation">)</span>tmp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>sat<span class="token punctuation">)</span><span class="token punctuation">:</span>    m<span class="token operator">=</span>s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        tmp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> tmp<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>str_arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获得flag:</p><pre class="line-numbers language-python"><code class="language-python">GJ0V4LA4VKEVQZSVCNGJ00N<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> maze </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re复现清单 </tag>
            
            <tag> KCTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
